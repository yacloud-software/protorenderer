// Code generated by protoc-gen-go.
// source: protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto
// DO NOT EDIT!

/*
Package protorenderer2 is a generated protocol buffer package.

It is generated from these files:
	protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto

It has these top-level messages:
	ProtoFileInfo
	ProtoMessageInfo
	ProtoFieldInfo
	ProtoFieldInfoText
	DBProtoFile
	SQLMessage
	ProtocRequest
	SubmitOption
	FileTransfer
	FileTransferStdout
	FileResult
	CompileResult
	VersionInfo
	VersionFile
	ReverseDependenciesRequest
	ReverseDependenciesResponse
	ProtoFileRequest
*/
package protorenderer2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "golang.conradwood.net/apis/protorenderer"
import common "golang.conradwood.net/apis/common"
import _ "golang.conradwood.net/apis/h2gproxy"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FieldModifier int32

const (
	FieldModifier_FM_UNDEFINED FieldModifier = 0
	FieldModifier_SINGLE       FieldModifier = 1
	FieldModifier_MAP          FieldModifier = 2
	FieldModifier_ARRAY        FieldModifier = 3
)

var FieldModifier_name = map[int32]string{
	0: "FM_UNDEFINED",
	1: "SINGLE",
	2: "MAP",
	3: "ARRAY",
}
var FieldModifier_value = map[string]int32{
	"FM_UNDEFINED": 0,
	"SINGLE":       1,
	"MAP":          2,
	"ARRAY":        3,
}

func (x FieldModifier) String() string {
	return proto.EnumName(FieldModifier_name, int32(x))
}
func (FieldModifier) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FieldType int32

const (
	FieldType_ft_UNDEFINED FieldType = 0
	FieldType_PRIMITIVE    FieldType = 1
	FieldType_OBJECT       FieldType = 2
)

var FieldType_name = map[int32]string{
	0: "ft_UNDEFINED",
	1: "PRIMITIVE",
	2: "OBJECT",
}
var FieldType_value = map[string]int32{
	"ft_UNDEFINED": 0,
	"PRIMITIVE":    1,
	"OBJECT":       2,
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}
func (FieldType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ProtoFieldPrimitive int32

const (
	ProtoFieldPrimitive_PFT_UNDEFINED ProtoFieldPrimitive = 0
	ProtoFieldPrimitive_STRING        ProtoFieldPrimitive = 1
	ProtoFieldPrimitive_UINT64        ProtoFieldPrimitive = 2
	ProtoFieldPrimitive_UINT32        ProtoFieldPrimitive = 3
	ProtoFieldPrimitive_BYTES         ProtoFieldPrimitive = 4
	ProtoFieldPrimitive_BOOL          ProtoFieldPrimitive = 5
	ProtoFieldPrimitive_INT32         ProtoFieldPrimitive = 6
	ProtoFieldPrimitive_ENUM          ProtoFieldPrimitive = 7
	ProtoFieldPrimitive_DOUBLE        ProtoFieldPrimitive = 8
	ProtoFieldPrimitive_FLOAT         ProtoFieldPrimitive = 9
	ProtoFieldPrimitive_INT64         ProtoFieldPrimitive = 10
	ProtoFieldPrimitive_SINT32        ProtoFieldPrimitive = 11
	ProtoFieldPrimitive_SINT64        ProtoFieldPrimitive = 12
)

var ProtoFieldPrimitive_name = map[int32]string{
	0:  "PFT_UNDEFINED",
	1:  "STRING",
	2:  "UINT64",
	3:  "UINT32",
	4:  "BYTES",
	5:  "BOOL",
	6:  "INT32",
	7:  "ENUM",
	8:  "DOUBLE",
	9:  "FLOAT",
	10: "INT64",
	11: "SINT32",
	12: "SINT64",
}
var ProtoFieldPrimitive_value = map[string]int32{
	"PFT_UNDEFINED": 0,
	"STRING":        1,
	"UINT64":        2,
	"UINT32":        3,
	"BYTES":         4,
	"BOOL":          5,
	"INT32":         6,
	"ENUM":          7,
	"DOUBLE":        8,
	"FLOAT":         9,
	"INT64":         10,
	"SINT32":        11,
	"SINT64":        12,
}

func (x ProtoFieldPrimitive) String() string {
	return proto.EnumName(ProtoFieldPrimitive_name, int32(x))
}
func (ProtoFieldPrimitive) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// information parsed out of a .proto file, enriched with references to database IDs, created by meta
// this is what we cache in the metacache
// saved under info/... .info
type ProtoFileInfo struct {
	ProtoFile   *DBProtoFile        `protobuf:"bytes,1,opt,name=ProtoFile" json:"ProtoFile,omitempty"`
	Imports     []*DBProtoFile      `protobuf:"bytes,2,rep,name=Imports" json:"Imports,omitempty"`
	CNWOptions  map[string]string   `protobuf:"bytes,3,rep,name=CNWOptions" json:"CNWOptions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Messages    []*ProtoMessageInfo `protobuf:"bytes,4,rep,name=Messages" json:"Messages,omitempty"`
	Package     string              `protobuf:"bytes,5,opt,name=Package" json:"Package,omitempty"`
	PackageJava string              `protobuf:"bytes,6,opt,name=PackageJava" json:"PackageJava,omitempty"`
	PackageGo   string              `protobuf:"bytes,7,opt,name=PackageGo" json:"PackageGo,omitempty"`
}

func (m *ProtoFileInfo) Reset()                    { *m = ProtoFileInfo{} }
func (m *ProtoFileInfo) String() string            { return proto.CompactTextString(m) }
func (*ProtoFileInfo) ProtoMessage()               {}
func (*ProtoFileInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProtoFileInfo) GetProtoFile() *DBProtoFile {
	if m != nil {
		return m.ProtoFile
	}
	return nil
}

func (m *ProtoFileInfo) GetImports() []*DBProtoFile {
	if m != nil {
		return m.Imports
	}
	return nil
}

func (m *ProtoFileInfo) GetCNWOptions() map[string]string {
	if m != nil {
		return m.CNWOptions
	}
	return nil
}

func (m *ProtoFileInfo) GetMessages() []*ProtoMessageInfo {
	if m != nil {
		return m.Messages
	}
	return nil
}

func (m *ProtoFileInfo) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

func (m *ProtoFileInfo) GetPackageJava() string {
	if m != nil {
		return m.PackageJava
	}
	return ""
}

func (m *ProtoFileInfo) GetPackageGo() string {
	if m != nil {
		return m.PackageGo
	}
	return ""
}

type ProtoMessageInfo struct {
	Message *SQLMessage       `protobuf:"bytes,1,opt,name=Message" json:"Message,omitempty"`
	Comment string            `protobuf:"bytes,2,opt,name=Comment" json:"Comment,omitempty"`
	Fields  []*ProtoFieldInfo `protobuf:"bytes,3,rep,name=Fields" json:"Fields,omitempty"`
}

func (m *ProtoMessageInfo) Reset()                    { *m = ProtoMessageInfo{} }
func (m *ProtoMessageInfo) String() string            { return proto.CompactTextString(m) }
func (*ProtoMessageInfo) ProtoMessage()               {}
func (*ProtoMessageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProtoMessageInfo) GetMessage() *SQLMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ProtoMessageInfo) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ProtoMessageInfo) GetFields() []*ProtoFieldInfo {
	if m != nil {
		return m.Fields
	}
	return nil
}

type ProtoFieldInfo struct {
	Name                  string              `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Comment               string              `protobuf:"bytes,2,opt,name=Comment" json:"Comment,omitempty"`
	Modifier              FieldModifier       `protobuf:"varint,3,opt,name=Modifier,enum=protorenderer2.FieldModifier" json:"Modifier,omitempty"`
	Type1                 FieldType           `protobuf:"varint,4,opt,name=Type1,enum=protorenderer2.FieldType" json:"Type1,omitempty"`
	Type2                 FieldType           `protobuf:"varint,5,opt,name=Type2,enum=protorenderer2.FieldType" json:"Type2,omitempty"`
	PrimitiveType1        ProtoFieldPrimitive `protobuf:"varint,6,opt,name=PrimitiveType1,enum=protorenderer2.ProtoFieldPrimitive" json:"PrimitiveType1,omitempty"`
	PrimitiveType2        ProtoFieldPrimitive `protobuf:"varint,7,opt,name=PrimitiveType2,enum=protorenderer2.ProtoFieldPrimitive" json:"PrimitiveType2,omitempty"`
	ObjectID1             uint64              `protobuf:"varint,8,opt,name=ObjectID1" json:"ObjectID1,omitempty"`
	ObjectID2             uint64              `protobuf:"varint,9,opt,name=ObjectID2" json:"ObjectID2,omitempty"`
	TextualRepresentation *ProtoFieldInfoText `protobuf:"bytes,10,opt,name=TextualRepresentation" json:"TextualRepresentation,omitempty"`
}

func (m *ProtoFieldInfo) Reset()                    { *m = ProtoFieldInfo{} }
func (m *ProtoFieldInfo) String() string            { return proto.CompactTextString(m) }
func (*ProtoFieldInfo) ProtoMessage()               {}
func (*ProtoFieldInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProtoFieldInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProtoFieldInfo) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ProtoFieldInfo) GetModifier() FieldModifier {
	if m != nil {
		return m.Modifier
	}
	return FieldModifier_FM_UNDEFINED
}

func (m *ProtoFieldInfo) GetType1() FieldType {
	if m != nil {
		return m.Type1
	}
	return FieldType_ft_UNDEFINED
}

func (m *ProtoFieldInfo) GetType2() FieldType {
	if m != nil {
		return m.Type2
	}
	return FieldType_ft_UNDEFINED
}

func (m *ProtoFieldInfo) GetPrimitiveType1() ProtoFieldPrimitive {
	if m != nil {
		return m.PrimitiveType1
	}
	return ProtoFieldPrimitive_PFT_UNDEFINED
}

func (m *ProtoFieldInfo) GetPrimitiveType2() ProtoFieldPrimitive {
	if m != nil {
		return m.PrimitiveType2
	}
	return ProtoFieldPrimitive_PFT_UNDEFINED
}

func (m *ProtoFieldInfo) GetObjectID1() uint64 {
	if m != nil {
		return m.ObjectID1
	}
	return 0
}

func (m *ProtoFieldInfo) GetObjectID2() uint64 {
	if m != nil {
		return m.ObjectID2
	}
	return 0
}

func (m *ProtoFieldInfo) GetTextualRepresentation() *ProtoFieldInfoText {
	if m != nil {
		return m.TextualRepresentation
	}
	return nil
}

type ProtoFieldInfoText struct {
	ModifierString       string `protobuf:"bytes,1,opt,name=ModifierString" json:"ModifierString,omitempty"`
	Type1String          string `protobuf:"bytes,2,opt,name=Type1String" json:"Type1String,omitempty"`
	Type2String          string `protobuf:"bytes,3,opt,name=Type2String" json:"Type2String,omitempty"`
	PrimitiveType1String string `protobuf:"bytes,4,opt,name=PrimitiveType1String" json:"PrimitiveType1String,omitempty"`
	PrimitiveType2String string `protobuf:"bytes,5,opt,name=PrimitiveType2String" json:"PrimitiveType2String,omitempty"`
	ObjectID1String      string `protobuf:"bytes,6,opt,name=ObjectID1String" json:"ObjectID1String,omitempty"`
	ObjectID2String      string `protobuf:"bytes,7,opt,name=ObjectID2String" json:"ObjectID2String,omitempty"`
}

func (m *ProtoFieldInfoText) Reset()                    { *m = ProtoFieldInfoText{} }
func (m *ProtoFieldInfoText) String() string            { return proto.CompactTextString(m) }
func (*ProtoFieldInfoText) ProtoMessage()               {}
func (*ProtoFieldInfoText) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ProtoFieldInfoText) GetModifierString() string {
	if m != nil {
		return m.ModifierString
	}
	return ""
}

func (m *ProtoFieldInfoText) GetType1String() string {
	if m != nil {
		return m.Type1String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetType2String() string {
	if m != nil {
		return m.Type2String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetPrimitiveType1String() string {
	if m != nil {
		return m.PrimitiveType1String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetPrimitiveType2String() string {
	if m != nil {
		return m.PrimitiveType2String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetObjectID1String() string {
	if m != nil {
		return m.ObjectID1String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetObjectID2String() string {
	if m != nil {
		return m.ObjectID2String
	}
	return ""
}

// keeping a file in database with metadata
type DBProtoFile struct {
	ID           uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Filename     string `protobuf:"bytes,2,opt,name=Filename" json:"Filename,omitempty"`
	RepositoryID uint64 `protobuf:"varint,3,opt,name=RepositoryID" json:"RepositoryID,omitempty"`
	Package      string `protobuf:"bytes,4,opt,name=Package" json:"Package,omitempty"`
}

func (m *DBProtoFile) Reset()                    { *m = DBProtoFile{} }
func (m *DBProtoFile) String() string            { return proto.CompactTextString(m) }
func (*DBProtoFile) ProtoMessage()               {}
func (*DBProtoFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DBProtoFile) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *DBProtoFile) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *DBProtoFile) GetRepositoryID() uint64 {
	if m != nil {
		return m.RepositoryID
	}
	return 0
}

func (m *DBProtoFile) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

type SQLMessage struct {
	ID        uint64       `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	ProtoFile *DBProtoFile `protobuf:"bytes,2,opt,name=ProtoFile" json:"ProtoFile,omitempty"`
	Name      string       `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
}

func (m *SQLMessage) Reset()                    { *m = SQLMessage{} }
func (m *SQLMessage) String() string            { return proto.CompactTextString(m) }
func (*SQLMessage) ProtoMessage()               {}
func (*SQLMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SQLMessage) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SQLMessage) GetProtoFile() *DBProtoFile {
	if m != nil {
		return m.ProtoFile
	}
	return nil
}

func (m *SQLMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ProtocRequest struct {
	MetaCompilerID string                                 `protobuf:"bytes,1,opt,name=MetaCompilerID" json:"MetaCompilerID,omitempty"`
	ProtoFiles     []*google_protobuf.FileDescriptorProto `protobuf:"bytes,2,rep,name=ProtoFiles" json:"ProtoFiles,omitempty"`
}

func (m *ProtocRequest) Reset()                    { *m = ProtocRequest{} }
func (m *ProtocRequest) String() string            { return proto.CompactTextString(m) }
func (*ProtocRequest) ProtoMessage()               {}
func (*ProtocRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ProtocRequest) GetMetaCompilerID() string {
	if m != nil {
		return m.MetaCompilerID
	}
	return ""
}

func (m *ProtocRequest) GetProtoFiles() []*google_protobuf.FileDescriptorProto {
	if m != nil {
		return m.ProtoFiles
	}
	return nil
}

type SubmitOption struct {
	Save        bool `protobuf:"varint,1,opt,name=Save" json:"Save,omitempty"`
	IncludeMeta bool `protobuf:"varint,2,opt,name=IncludeMeta" json:"IncludeMeta,omitempty"`
}

func (m *SubmitOption) Reset()                    { *m = SubmitOption{} }
func (m *SubmitOption) String() string            { return proto.CompactTextString(m) }
func (*SubmitOption) ProtoMessage()               {}
func (*SubmitOption) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *SubmitOption) GetSave() bool {
	if m != nil {
		return m.Save
	}
	return false
}

func (m *SubmitOption) GetIncludeMeta() bool {
	if m != nil {
		return m.IncludeMeta
	}
	return false
}

type FileTransfer struct {
	Filename         string              `protobuf:"bytes,1,opt,name=Filename" json:"Filename,omitempty"`
	Data             []byte              `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	TransferComplete bool                `protobuf:"varint,3,opt,name=TransferComplete" json:"TransferComplete,omitempty"`
	RepositoryID     uint32              `protobuf:"varint,4,opt,name=RepositoryID" json:"RepositoryID,omitempty"`
	Result           *FileResult         `protobuf:"bytes,5,opt,name=Result" json:"Result,omitempty"`
	SubmitOption     *SubmitOption       `protobuf:"bytes,6,opt,name=SubmitOption" json:"SubmitOption,omitempty"`
	Output           *FileTransferStdout `protobuf:"bytes,7,opt,name=Output" json:"Output,omitempty"`
}

func (m *FileTransfer) Reset()                    { *m = FileTransfer{} }
func (m *FileTransfer) String() string            { return proto.CompactTextString(m) }
func (*FileTransfer) ProtoMessage()               {}
func (*FileTransfer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *FileTransfer) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileTransfer) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileTransfer) GetTransferComplete() bool {
	if m != nil {
		return m.TransferComplete
	}
	return false
}

func (m *FileTransfer) GetRepositoryID() uint32 {
	if m != nil {
		return m.RepositoryID
	}
	return 0
}

func (m *FileTransfer) GetResult() *FileResult {
	if m != nil {
		return m.Result
	}
	return nil
}

func (m *FileTransfer) GetSubmitOption() *SubmitOption {
	if m != nil {
		return m.SubmitOption
	}
	return nil
}

func (m *FileTransfer) GetOutput() *FileTransferStdout {
	if m != nil {
		return m.Output
	}
	return nil
}

type FileTransferStdout struct {
	Lines []string `protobuf:"bytes,1,rep,name=Lines" json:"Lines,omitempty"`
}

func (m *FileTransferStdout) Reset()                    { *m = FileTransferStdout{} }
func (m *FileTransferStdout) String() string            { return proto.CompactTextString(m) }
func (*FileTransferStdout) ProtoMessage()               {}
func (*FileTransferStdout) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *FileTransferStdout) GetLines() []string {
	if m != nil {
		return m.Lines
	}
	return nil
}

type FileResult struct {
	//  bool Failed=1; // if at least one compiler failed, this is set
	Filename       string           `protobuf:"bytes,2,opt,name=Filename" json:"Filename,omitempty"`
	CompileResults []*CompileResult `protobuf:"bytes,3,rep,name=CompileResults" json:"CompileResults,omitempty"`
}

func (m *FileResult) Reset()                    { *m = FileResult{} }
func (m *FileResult) String() string            { return proto.CompactTextString(m) }
func (*FileResult) ProtoMessage()               {}
func (*FileResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *FileResult) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileResult) GetCompileResults() []*CompileResult {
	if m != nil {
		return m.CompileResults
	}
	return nil
}

type CompileResult struct {
	CompilerName string `protobuf:"bytes,1,opt,name=CompilerName" json:"CompilerName,omitempty"`
	Success      bool   `protobuf:"varint,2,opt,name=Success" json:"Success,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage" json:"ErrorMessage,omitempty"`
	Output       string `protobuf:"bytes,4,opt,name=Output" json:"Output,omitempty"`
}

func (m *CompileResult) Reset()                    { *m = CompileResult{} }
func (m *CompileResult) String() string            { return proto.CompactTextString(m) }
func (*CompileResult) ProtoMessage()               {}
func (*CompileResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *CompileResult) GetCompilerName() string {
	if m != nil {
		return m.CompilerName
	}
	return ""
}

func (m *CompileResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CompileResult) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *CompileResult) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

type VersionInfo struct {
	Files   []*VersionFile `protobuf:"bytes,1,rep,name=Files" json:"Files,omitempty"`
	Created uint32         `protobuf:"varint,2,opt,name=Created" json:"Created,omitempty"`
}

func (m *VersionInfo) Reset()                    { *m = VersionInfo{} }
func (m *VersionInfo) String() string            { return proto.CompactTextString(m) }
func (*VersionInfo) ProtoMessage()               {}
func (*VersionInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *VersionInfo) GetFiles() []*VersionFile {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *VersionInfo) GetCreated() uint32 {
	if m != nil {
		return m.Created
	}
	return 0
}

type VersionFile struct {
	Filename   string      `protobuf:"bytes,1,opt,name=Filename" json:"Filename,omitempty"`
	FileResult *FileResult `protobuf:"bytes,2,opt,name=FileResult" json:"FileResult,omitempty"`
}

func (m *VersionFile) Reset()                    { *m = VersionFile{} }
func (m *VersionFile) String() string            { return proto.CompactTextString(m) }
func (*VersionFile) ProtoMessage()               {}
func (*VersionFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *VersionFile) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *VersionFile) GetFileResult() *FileResult {
	if m != nil {
		return m.FileResult
	}
	return nil
}

type ReverseDependenciesRequest struct {
	MaxDepth uint32 `protobuf:"varint,1,opt,name=MaxDepth" json:"MaxDepth,omitempty"`
	Filename string `protobuf:"bytes,2,opt,name=Filename" json:"Filename,omitempty"`
}

func (m *ReverseDependenciesRequest) Reset()                    { *m = ReverseDependenciesRequest{} }
func (m *ReverseDependenciesRequest) String() string            { return proto.CompactTextString(m) }
func (*ReverseDependenciesRequest) ProtoMessage()               {}
func (*ReverseDependenciesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *ReverseDependenciesRequest) GetMaxDepth() uint32 {
	if m != nil {
		return m.MaxDepth
	}
	return 0
}

func (m *ReverseDependenciesRequest) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

type ReverseDependenciesResponse struct {
	Filenames []string `protobuf:"bytes,1,rep,name=Filenames" json:"Filenames,omitempty"`
}

func (m *ReverseDependenciesResponse) Reset()                    { *m = ReverseDependenciesResponse{} }
func (m *ReverseDependenciesResponse) String() string            { return proto.CompactTextString(m) }
func (*ReverseDependenciesResponse) ProtoMessage()               {}
func (*ReverseDependenciesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ReverseDependenciesResponse) GetFilenames() []string {
	if m != nil {
		return m.Filenames
	}
	return nil
}

type ProtoFileRequest struct {
	ProtoFileName string   `protobuf:"bytes,1,opt,name=ProtoFileName" json:"ProtoFileName,omitempty"`
	Compilers     []string `protobuf:"bytes,2,rep,name=Compilers" json:"Compilers,omitempty"`
}

func (m *ProtoFileRequest) Reset()                    { *m = ProtoFileRequest{} }
func (m *ProtoFileRequest) String() string            { return proto.CompactTextString(m) }
func (*ProtoFileRequest) ProtoMessage()               {}
func (*ProtoFileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ProtoFileRequest) GetProtoFileName() string {
	if m != nil {
		return m.ProtoFileName
	}
	return ""
}

func (m *ProtoFileRequest) GetCompilers() []string {
	if m != nil {
		return m.Compilers
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoFileInfo)(nil), "protorenderer2.ProtoFileInfo")
	proto.RegisterType((*ProtoMessageInfo)(nil), "protorenderer2.ProtoMessageInfo")
	proto.RegisterType((*ProtoFieldInfo)(nil), "protorenderer2.ProtoFieldInfo")
	proto.RegisterType((*ProtoFieldInfoText)(nil), "protorenderer2.ProtoFieldInfoText")
	proto.RegisterType((*DBProtoFile)(nil), "protorenderer2.DBProtoFile")
	proto.RegisterType((*SQLMessage)(nil), "protorenderer2.SQLMessage")
	proto.RegisterType((*ProtocRequest)(nil), "protorenderer2.ProtocRequest")
	proto.RegisterType((*SubmitOption)(nil), "protorenderer2.SubmitOption")
	proto.RegisterType((*FileTransfer)(nil), "protorenderer2.FileTransfer")
	proto.RegisterType((*FileTransferStdout)(nil), "protorenderer2.FileTransferStdout")
	proto.RegisterType((*FileResult)(nil), "protorenderer2.FileResult")
	proto.RegisterType((*CompileResult)(nil), "protorenderer2.CompileResult")
	proto.RegisterType((*VersionInfo)(nil), "protorenderer2.VersionInfo")
	proto.RegisterType((*VersionFile)(nil), "protorenderer2.VersionFile")
	proto.RegisterType((*ReverseDependenciesRequest)(nil), "protorenderer2.ReverseDependenciesRequest")
	proto.RegisterType((*ReverseDependenciesResponse)(nil), "protorenderer2.ReverseDependenciesResponse")
	proto.RegisterType((*ProtoFileRequest)(nil), "protorenderer2.ProtoFileRequest")
	proto.RegisterEnum("protorenderer2.FieldModifier", FieldModifier_name, FieldModifier_value)
	proto.RegisterEnum("protorenderer2.FieldType", FieldType_name, FieldType_value)
	proto.RegisterEnum("protorenderer2.ProtoFieldPrimitive", ProtoFieldPrimitive_name, ProtoFieldPrimitive_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProtoRenderer2 service

type ProtoRenderer2Client interface {
	// protoc-gen-meta2 submits files to protorenderer server for analysis. not intented to be used by clients other than protoc-gen-meta2
	InternalMetaSubmit(ctx context.Context, in *ProtocRequest, opts ...grpc.CallOption) (*common.Void, error)
	// compile on-the-fly, if option "Save" is true, and the compilation suceeds, it will be stored in protorenderes database
	Submit(ctx context.Context, opts ...grpc.CallOption) (ProtoRenderer2_SubmitClient, error)
	// get the current versioninfo (that, what files are available and what their compile results are)
	GetVersionInfo(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*VersionInfo, error)
	// get reverse depdencies, that is which files depend on the file submitted.
	GetReverseDependencies(ctx context.Context, in *ReverseDependenciesRequest, opts ...grpc.CallOption) (*ReverseDependenciesResponse, error)
	// get a proto file, and optionally its artefacts
	GetProtoFile(ctx context.Context, in *ProtoFileRequest, opts ...grpc.CallOption) (ProtoRenderer2_GetProtoFileClient, error)
}

type protoRenderer2Client struct {
	cc *grpc.ClientConn
}

func NewProtoRenderer2Client(cc *grpc.ClientConn) ProtoRenderer2Client {
	return &protoRenderer2Client{cc}
}

func (c *protoRenderer2Client) InternalMetaSubmit(ctx context.Context, in *ProtocRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/protorenderer2.ProtoRenderer2/InternalMetaSubmit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoRenderer2Client) Submit(ctx context.Context, opts ...grpc.CallOption) (ProtoRenderer2_SubmitClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProtoRenderer2_serviceDesc.Streams[0], c.cc, "/protorenderer2.ProtoRenderer2/Submit", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoRenderer2SubmitClient{stream}
	return x, nil
}

type ProtoRenderer2_SubmitClient interface {
	Send(*FileTransfer) error
	Recv() (*FileTransfer, error)
	grpc.ClientStream
}

type protoRenderer2SubmitClient struct {
	grpc.ClientStream
}

func (x *protoRenderer2SubmitClient) Send(m *FileTransfer) error {
	return x.ClientStream.SendMsg(m)
}

func (x *protoRenderer2SubmitClient) Recv() (*FileTransfer, error) {
	m := new(FileTransfer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *protoRenderer2Client) GetVersionInfo(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*VersionInfo, error) {
	out := new(VersionInfo)
	err := grpc.Invoke(ctx, "/protorenderer2.ProtoRenderer2/GetVersionInfo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoRenderer2Client) GetReverseDependencies(ctx context.Context, in *ReverseDependenciesRequest, opts ...grpc.CallOption) (*ReverseDependenciesResponse, error) {
	out := new(ReverseDependenciesResponse)
	err := grpc.Invoke(ctx, "/protorenderer2.ProtoRenderer2/GetReverseDependencies", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoRenderer2Client) GetProtoFile(ctx context.Context, in *ProtoFileRequest, opts ...grpc.CallOption) (ProtoRenderer2_GetProtoFileClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProtoRenderer2_serviceDesc.Streams[1], c.cc, "/protorenderer2.ProtoRenderer2/GetProtoFile", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoRenderer2GetProtoFileClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type ProtoRenderer2_GetProtoFileClient interface {
	Recv() (*FileTransfer, error)
	grpc.ClientStream
}

type protoRenderer2GetProtoFileClient struct {
	grpc.ClientStream
}

func (x *protoRenderer2GetProtoFileClient) Recv() (*FileTransfer, error) {
	m := new(FileTransfer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for ProtoRenderer2 service

type ProtoRenderer2Server interface {
	// protoc-gen-meta2 submits files to protorenderer server for analysis. not intented to be used by clients other than protoc-gen-meta2
	InternalMetaSubmit(context.Context, *ProtocRequest) (*common.Void, error)
	// compile on-the-fly, if option "Save" is true, and the compilation suceeds, it will be stored in protorenderes database
	Submit(ProtoRenderer2_SubmitServer) error
	// get the current versioninfo (that, what files are available and what their compile results are)
	GetVersionInfo(context.Context, *common.Void) (*VersionInfo, error)
	// get reverse depdencies, that is which files depend on the file submitted.
	GetReverseDependencies(context.Context, *ReverseDependenciesRequest) (*ReverseDependenciesResponse, error)
	// get a proto file, and optionally its artefacts
	GetProtoFile(*ProtoFileRequest, ProtoRenderer2_GetProtoFileServer) error
}

func RegisterProtoRenderer2Server(s *grpc.Server, srv ProtoRenderer2Server) {
	s.RegisterService(&_ProtoRenderer2_serviceDesc, srv)
}

func _ProtoRenderer2_InternalMetaSubmit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProtocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoRenderer2Server).InternalMetaSubmit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protorenderer2.ProtoRenderer2/InternalMetaSubmit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoRenderer2Server).InternalMetaSubmit(ctx, req.(*ProtocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoRenderer2_Submit_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProtoRenderer2Server).Submit(&protoRenderer2SubmitServer{stream})
}

type ProtoRenderer2_SubmitServer interface {
	Send(*FileTransfer) error
	Recv() (*FileTransfer, error)
	grpc.ServerStream
}

type protoRenderer2SubmitServer struct {
	grpc.ServerStream
}

func (x *protoRenderer2SubmitServer) Send(m *FileTransfer) error {
	return x.ServerStream.SendMsg(m)
}

func (x *protoRenderer2SubmitServer) Recv() (*FileTransfer, error) {
	m := new(FileTransfer)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProtoRenderer2_GetVersionInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoRenderer2Server).GetVersionInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protorenderer2.ProtoRenderer2/GetVersionInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoRenderer2Server).GetVersionInfo(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoRenderer2_GetReverseDependencies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReverseDependenciesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoRenderer2Server).GetReverseDependencies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protorenderer2.ProtoRenderer2/GetReverseDependencies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoRenderer2Server).GetReverseDependencies(ctx, req.(*ReverseDependenciesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoRenderer2_GetProtoFile_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ProtoFileRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(ProtoRenderer2Server).GetProtoFile(m, &protoRenderer2GetProtoFileServer{stream})
}

type ProtoRenderer2_GetProtoFileServer interface {
	Send(*FileTransfer) error
	grpc.ServerStream
}

type protoRenderer2GetProtoFileServer struct {
	grpc.ServerStream
}

func (x *protoRenderer2GetProtoFileServer) Send(m *FileTransfer) error {
	return x.ServerStream.SendMsg(m)
}

var _ProtoRenderer2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protorenderer2.ProtoRenderer2",
	HandlerType: (*ProtoRenderer2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InternalMetaSubmit",
			Handler:    _ProtoRenderer2_InternalMetaSubmit_Handler,
		},
		{
			MethodName: "GetVersionInfo",
			Handler:    _ProtoRenderer2_GetVersionInfo_Handler,
		},
		{
			MethodName: "GetReverseDependencies",
			Handler:    _ProtoRenderer2_GetReverseDependencies_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Submit",
			Handler:       _ProtoRenderer2_Submit_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
		{
			StreamName:    "GetProtoFile",
			Handler:       _ProtoRenderer2_GetProtoFile_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto",
}

func init() {
	proto.RegisterFile("protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1464 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x57, 0x4f, 0x6f, 0xdb, 0xc6,
	0x12, 0x7f, 0x94, 0x64, 0xfd, 0x19, 0x4b, 0x0a, 0xdf, 0xbe, 0xbc, 0x80, 0x51, 0x9c, 0x07, 0x81,
	0x2f, 0x28, 0x1c, 0x17, 0x95, 0x13, 0xc6, 0x35, 0xf2, 0xaf, 0x40, 0x2d, 0x53, 0x76, 0x99, 0x5a,
	0x92, 0xbb, 0x92, 0x9d, 0x26, 0x97, 0x82, 0x96, 0xd6, 0x0a, 0x1b, 0x89, 0x64, 0xc8, 0x95, 0x13,
	0x1f, 0x7a, 0xc9, 0xad, 0xe8, 0x37, 0xc8, 0xa5, 0x40, 0x2f, 0xbd, 0xf6, 0x03, 0xf4, 0xd0, 0x8f,
	0x56, 0xec, 0x72, 0x57, 0x22, 0x29, 0x59, 0x09, 0x7a, 0xd2, 0xce, 0xec, 0xef, 0x37, 0x3b, 0x9a,
	0x99, 0x9d, 0x59, 0x42, 0xcb, 0x0f, 0x3c, 0xea, 0x85, 0xdb, 0x23, 0x6f, 0x6c, 0xbb, 0xa3, 0xc6,
	0xc0, 0x73, 0x03, 0x7b, 0xf8, 0xd6, 0xf3, 0x86, 0x0d, 0x97, 0xd0, 0x6d, 0xdb, 0x77, 0xc2, 0x6d,
	0x8e, 0x08, 0x88, 0x3b, 0x24, 0x01, 0x09, 0x8c, 0x94, 0xd8, 0xe0, 0x22, 0xaa, 0x26, 0xb5, 0xb5,
	0xa7, 0x9f, 0x6a, 0x2f, 0x29, 0x45, 0xd6, 0x6a, 0x8d, 0x15, 0xec, 0x81, 0x37, 0x99, 0x78, 0xae,
	0xf8, 0x11, 0x78, 0x63, 0x05, 0xfe, 0x95, 0x31, 0xf2, 0x03, 0xef, 0xdd, 0xe5, 0x6c, 0x21, 0x38,
	0xf5, 0x91, 0xe7, 0x8d, 0xc6, 0x24, 0x3a, 0xff, 0x6c, 0x7a, 0xbe, 0x3d, 0x24, 0xe1, 0x20, 0x70,
	0x7c, 0xea, 0x09, 0x2f, 0xf4, 0xdf, 0xb3, 0x50, 0x39, 0x66, 0xab, 0x03, 0x67, 0x4c, 0x2c, 0xf7,
	0xdc, 0x43, 0x8f, 0xa0, 0x34, 0x53, 0x68, 0x4a, 0x5d, 0xd9, 0x5c, 0x37, 0x6e, 0x35, 0x52, 0xf1,
	0x30, 0x9b, 0x33, 0x08, 0x9e, 0xa3, 0xd1, 0x97, 0x50, 0xb0, 0x26, 0xbe, 0x17, 0xd0, 0x50, 0xcb,
	0xd4, 0xb3, 0x1f, 0x23, 0x4a, 0x2c, 0x6a, 0x03, 0xec, 0x77, 0x9e, 0x77, 0x7d, 0xea, 0x78, 0x6e,
	0xa8, 0x65, 0x39, 0xf3, 0x8b, 0x34, 0x33, 0xe1, 0x64, 0x63, 0x8e, 0x6f, 0xb9, 0x34, 0xb8, 0xc4,
	0x31, 0x03, 0xe8, 0x29, 0x14, 0xdb, 0x24, 0x0c, 0xed, 0x11, 0x09, 0xb5, 0x1c, 0x37, 0x56, 0x5f,
	0x6a, 0x4c, 0x80, 0x98, 0x3d, 0x3c, 0x63, 0x20, 0x0d, 0x0a, 0xc7, 0xf6, 0xe0, 0xb5, 0x3d, 0x22,
	0xda, 0x5a, 0x5d, 0xd9, 0x2c, 0x61, 0x29, 0xa2, 0x3a, 0xac, 0x8b, 0xe5, 0x33, 0xfb, 0xc2, 0xd6,
	0xf2, 0x7c, 0x37, 0xae, 0x42, 0x1b, 0x50, 0x12, 0xe2, 0xa1, 0xa7, 0x15, 0xf8, 0xfe, 0x5c, 0x51,
	0xfb, 0x0a, 0xae, 0xa5, 0xdc, 0x46, 0x2a, 0x64, 0x5f, 0x93, 0x4b, 0x1e, 0xe5, 0x12, 0x66, 0x4b,
	0x74, 0x1d, 0xd6, 0x2e, 0xec, 0xf1, 0x94, 0x68, 0x19, 0xae, 0x8b, 0x84, 0xc7, 0x99, 0x87, 0x8a,
	0xfe, 0x41, 0x01, 0x35, 0xed, 0x37, 0xda, 0x81, 0x82, 0x10, 0x45, 0xaa, 0x6a, 0xe9, 0xbf, 0xda,
	0xfb, 0xee, 0x48, 0x20, 0xb0, 0x84, 0xb2, 0xff, 0xb8, 0xef, 0x4d, 0x26, 0xc4, 0xa5, 0xe2, 0x18,
	0x29, 0xa2, 0x5d, 0xc8, 0x1f, 0x38, 0x64, 0x3c, 0x94, 0x69, 0xf8, 0xdf, 0x15, 0x69, 0x20, 0xe3,
	0x21, 0x8f, 0x9b, 0x40, 0xeb, 0xbf, 0xe4, 0xa0, 0x9a, 0xdc, 0x42, 0x08, 0x72, 0x1d, 0x7b, 0x42,
	0xc4, 0x9f, 0xe3, 0xeb, 0x15, 0x07, 0x3f, 0x82, 0x62, 0xdb, 0x1b, 0x3a, 0xe7, 0x0e, 0x09, 0xb4,
	0x6c, 0x5d, 0xd9, 0xac, 0x1a, 0xb7, 0xd3, 0x47, 0x73, 0xd3, 0x12, 0x84, 0x67, 0x70, 0xb4, 0x0d,
	0x6b, 0xfd, 0x4b, 0x9f, 0xdc, 0xd7, 0x72, 0x9c, 0x77, 0x73, 0x29, 0x8f, 0x21, 0x70, 0x84, 0x93,
	0x04, 0x83, 0x27, 0xf8, 0xe3, 0x04, 0x03, 0x7d, 0xcb, 0xfe, 0x9c, 0x33, 0x71, 0xa8, 0x73, 0x41,
	0xa2, 0xa3, 0xf2, 0x9c, 0xf9, 0xff, 0xab, 0xa3, 0x33, 0xc3, 0xe3, 0x14, 0x75, 0xc1, 0x98, 0xc1,
	0x2b, 0xe5, 0x1f, 0x19, 0x33, 0x58, 0xc5, 0x75, 0xcf, 0x7e, 0x24, 0x03, 0x6a, 0x99, 0xf7, 0xb5,
	0x62, 0x5d, 0xd9, 0xcc, 0xe1, 0xb9, 0x22, 0xbe, 0x6b, 0x68, 0xa5, 0xe4, 0xae, 0x81, 0xbe, 0x87,
	0xff, 0xf6, 0xc9, 0x3b, 0x3a, 0xb5, 0xc7, 0x98, 0xf8, 0x01, 0x09, 0x89, 0x4b, 0x6d, 0x56, 0x9b,
	0x1a, 0xf0, 0x4a, 0xd2, 0x57, 0xa7, 0x9e, 0x51, 0xf1, 0x72, 0x03, 0xfa, 0x9f, 0x19, 0x40, 0x8b,
	0x68, 0xf4, 0x19, 0x54, 0x65, 0xd2, 0x7a, 0x34, 0x70, 0xdc, 0x91, 0xa8, 0x8d, 0x94, 0x96, 0x5d,
	0x34, 0x1e, 0x2a, 0x01, 0x8a, 0x2a, 0x25, 0xae, 0x92, 0x08, 0x43, 0x20, 0xb2, 0x73, 0x84, 0x50,
	0x21, 0x03, 0xae, 0x27, 0xe3, 0x2e, 0xa0, 0x39, 0x0e, 0x5d, 0xba, 0xb7, 0xc0, 0x91, 0xe6, 0xd7,
	0x96, 0x70, 0xe4, 0x39, 0x9b, 0x70, 0x6d, 0x16, 0x6f, 0x01, 0x8f, 0x1a, 0x43, 0x5a, 0x1d, 0x47,
	0x4a, 0xc3, 0x85, 0x24, 0x52, 0xa8, 0xf5, 0xb7, 0xb0, 0x1e, 0xeb, 0x93, 0xa8, 0x0a, 0x19, 0xcb,
	0xe4, 0xa1, 0xca, 0xe1, 0x8c, 0x65, 0xa2, 0x1a, 0x14, 0x99, 0xde, 0x65, 0x97, 0x2b, 0x8a, 0xcd,
	0x4c, 0x46, 0x3a, 0x94, 0x31, 0xf1, 0xbd, 0xd0, 0xa1, 0x5e, 0x70, 0x69, 0x99, 0x3c, 0x32, 0x39,
	0x9c, 0xd0, 0xc5, 0x3b, 0x5c, 0x2e, 0xd1, 0xe1, 0xf4, 0x9f, 0x15, 0x80, 0x79, 0xbf, 0x58, 0x38,
	0xf8, 0x79, 0x7c, 0x32, 0x64, 0x3e, 0x3a, 0x19, 0x9a, 0x1b, 0x1f, 0xde, 0xdf, 0xcc, 0x4f, 0x1d,
	0x97, 0xee, 0xee, 0xfc, 0xf6, 0xfe, 0x66, 0x75, 0x78, 0xc6, 0xb1, 0xe7, 0xce, 0x98, 0x34, 0x9c,
	0x61, 0x7c, 0x6e, 0xc8, 0x56, 0x91, 0x9d, 0xb7, 0x0a, 0xfd, 0x27, 0x31, 0x97, 0x06, 0x98, 0xbc,
	0x99, 0x92, 0x30, 0xaa, 0x1e, 0x42, 0xed, 0x7d, 0x6f, 0xe2, 0x3b, 0x63, 0x12, 0x08, 0xcf, 0x58,
	0xf5, 0x24, 0xb4, 0xc8, 0x04, 0x98, 0x59, 0x96, 0x73, 0xe8, 0x4e, 0x23, 0x1a, 0x84, 0x0d, 0x39,
	0x08, 0x1b, 0x6c, 0xd7, 0x9c, 0x0d, 0x43, 0x4e, 0xc0, 0x31, 0x9e, 0x6e, 0x42, 0xb9, 0x37, 0x3d,
	0x9b, 0x38, 0x34, 0xea, 0xd7, 0xcc, 0xc5, 0x9e, 0x7d, 0x11, 0x75, 0xb3, 0x22, 0xe6, 0x6b, 0x56,
	0x85, 0x96, 0x3b, 0x18, 0x4f, 0x87, 0x84, 0xb9, 0xc0, 0x23, 0x52, 0xc4, 0x71, 0x95, 0xfe, 0x57,
	0x06, 0xca, 0xcc, 0x5e, 0x3f, 0xb0, 0xdd, 0xf0, 0x9c, 0x04, 0x89, 0xdc, 0x29, 0xa9, 0xdc, 0x21,
	0xc8, 0x99, 0xb6, 0xb0, 0x53, 0xc6, 0x7c, 0x8d, 0xb6, 0x40, 0x95, 0x5c, 0xf6, 0x17, 0xc7, 0x84,
	0x46, 0x51, 0x2a, 0xe2, 0x05, 0xfd, 0x42, 0xee, 0x59, 0x72, 0x2b, 0xa9, 0xdc, 0x1b, 0x90, 0xc7,
	0x24, 0x9c, 0x8e, 0x29, 0x2f, 0xea, 0x25, 0xe3, 0x82, 0x4f, 0x66, 0x8e, 0xc0, 0x02, 0x89, 0xbe,
	0x4e, 0x86, 0x82, 0xd7, 0xf7, 0xba, 0xb1, 0xb1, 0x30, 0x68, 0x62, 0x18, 0x9c, 0x0c, 0xde, 0x63,
	0xc8, 0x77, 0xa7, 0xd4, 0x9f, 0x52, 0x5e, 0xf1, 0x4b, 0x5a, 0x4b, 0x3c, 0x46, 0x3d, 0x3a, 0xf4,
	0xa6, 0x14, 0x0b, 0x86, 0xbe, 0x05, 0x68, 0x71, 0x97, 0x8d, 0xc9, 0x23, 0xc7, 0x25, 0xa1, 0xa6,
	0xd4, 0xb3, 0x6c, 0x4c, 0x72, 0x41, 0xf7, 0x00, 0xe6, 0xfe, 0xaf, 0xbc, 0x27, 0x2d, 0xa8, 0x8a,
	0x92, 0x89, 0xc0, 0x72, 0xde, 0x2d, 0x0c, 0x9d, 0x04, 0x0a, 0xa7, 0x48, 0xec, 0xc2, 0x54, 0x12,
	0x2a, 0x96, 0x04, 0x59, 0x8b, 0xb1, 0xe9, 0x97, 0xd0, 0xb1, 0x0b, 0xd8, 0x9b, 0x0e, 0x06, 0x24,
	0x0c, 0x45, 0xcd, 0x48, 0x91, 0xb1, 0x5b, 0x41, 0xe0, 0x05, 0x72, 0xa6, 0x47, 0x17, 0x22, 0xa1,
	0x43, 0x37, 0x66, 0xc1, 0x8c, 0x6e, 0xaf, 0x0c, 0xd4, 0x4b, 0x58, 0x3f, 0x25, 0x41, 0xe8, 0x78,
	0x2e, 0x1f, 0xbf, 0xf7, 0x61, 0x2d, 0xba, 0x01, 0xca, 0xf2, 0x97, 0x98, 0xc0, 0xf2, 0x78, 0x45,
	0x48, 0x3e, 0x9d, 0x03, 0x62, 0x53, 0x32, 0xe4, 0x7e, 0x55, 0xb0, 0x14, 0x75, 0x32, 0xb3, 0xcd,
	0xef, 0xeb, 0xaa, 0x2a, 0x7e, 0x1c, 0xcf, 0x81, 0xe8, 0x12, 0xab, 0xaa, 0x2c, 0x86, 0xd6, 0xfb,
	0x50, 0xc3, 0xe4, 0x82, 0x04, 0x21, 0x31, 0x89, 0xcf, 0xc0, 0xee, 0xc0, 0x21, 0xa1, 0x6c, 0x00,
	0x35, 0x28, 0xb6, 0xed, 0x77, 0x26, 0xf1, 0xe9, 0x2b, 0x7e, 0x6a, 0x05, 0xcf, 0xe4, 0x55, 0xb9,
	0xd6, 0x9f, 0xc0, 0xad, 0xa5, 0x56, 0x43, 0xdf, 0x73, 0x43, 0xc2, 0x86, 0xa4, 0x84, 0xca, 0x72,
	0x9a, 0x2b, 0xf4, 0x53, 0xf1, 0xe8, 0x8a, 0xbc, 0x8c, 0x1c, 0xb9, 0x13, 0x7b, 0x32, 0xc7, 0x92,
	0x9c, 0x54, 0x32, 0xbb, 0x32, 0xeb, 0x51, 0x1b, 0x2a, 0xe1, 0xb9, 0x62, 0x6b, 0x0f, 0x2a, 0x89,
	0xf7, 0x0c, 0x52, 0xa1, 0x7c, 0xd0, 0xfe, 0xe1, 0xa4, 0x63, 0xb6, 0x0e, 0xac, 0x4e, 0xcb, 0x54,
	0xff, 0x85, 0x00, 0xf2, 0x3d, 0xab, 0x73, 0x78, 0xd4, 0x52, 0x15, 0x54, 0x80, 0x6c, 0x7b, 0xef,
	0x58, 0xcd, 0xa0, 0x12, 0xac, 0xed, 0x61, 0xbc, 0xf7, 0x42, 0xcd, 0x6e, 0x3d, 0x64, 0x8e, 0x8b,
	0x97, 0x0a, 0xa3, 0x9f, 0xd3, 0x04, 0xbd, 0x02, 0xa5, 0x63, 0x6c, 0xb5, 0xad, 0xbe, 0x75, 0xca,
	0x2c, 0x00, 0xe4, 0xbb, 0xcd, 0x67, 0xad, 0xfd, 0xbe, 0x9a, 0xd9, 0xfa, 0x43, 0x81, 0xff, 0x2c,
	0x79, 0x5d, 0xa0, 0x7f, 0x43, 0xe5, 0xf8, 0xa0, 0xbf, 0xe0, 0x44, 0x1f, 0x5b, 0x9d, 0xc3, 0xc8,
	0xc4, 0x89, 0xd5, 0xe9, 0xef, 0xee, 0xa8, 0x19, 0xb9, 0x7e, 0x60, 0xa8, 0x59, 0xe6, 0x53, 0xf3,
	0x45, 0xbf, 0xd5, 0x53, 0x73, 0xa8, 0x08, 0xb9, 0x66, 0xb7, 0x7b, 0xa4, 0xae, 0x31, 0x65, 0xb4,
	0x9f, 0x67, 0xca, 0x56, 0xe7, 0xa4, 0xad, 0x16, 0x18, 0xcb, 0xec, 0x9e, 0x34, 0x8f, 0x5a, 0x6a,
	0x91, 0x01, 0x0e, 0x8e, 0xba, 0x7b, 0x7d, 0xb5, 0x24, 0xb0, 0xbb, 0x3b, 0x2a, 0x88, 0x3f, 0xcd,
	0x78, 0xeb, 0x72, 0xbd, 0xbb, 0xa3, 0x96, 0x8d, 0x5f, 0xb3, 0xe2, 0x81, 0x89, 0x65, 0x11, 0xa1,
	0x3d, 0x40, 0x96, 0x4b, 0x49, 0xe0, 0xda, 0x63, 0xd6, 0x6c, 0xa3, 0x8e, 0x83, 0x6e, 0x2f, 0x7d,
	0xb6, 0xc8, 0x29, 0x52, 0x2b, 0x37, 0xc4, 0x47, 0xd5, 0xa9, 0xe7, 0x0c, 0xd1, 0x37, 0x90, 0x17,
	0xb4, 0x8d, 0x55, 0x2d, 0xa9, 0xb6, 0x72, 0x77, 0x53, 0xb9, 0xa7, 0xa0, 0x27, 0x50, 0x3d, 0x24,
	0x34, 0x7e, 0x01, 0x13, 0x27, 0xd5, 0xae, 0xba, 0x7f, 0x1c, 0xfa, 0x06, 0x6e, 0x1c, 0x12, 0xba,
	0xa4, 0x48, 0xd1, 0x56, 0x9a, 0x76, 0xf5, 0xfd, 0xa8, 0x7d, 0xfe, 0x49, 0x58, 0x51, 0xf5, 0xc7,
	0x50, 0x3e, 0x24, 0x74, 0x3e, 0x82, 0xeb, 0x57, 0x7e, 0x6f, 0x49, 0xf3, 0x2b, 0x63, 0x70, 0x4f,
	0x69, 0x9e, 0xc2, 0x5d, 0x97, 0xd0, 0xf8, 0xe7, 0xa9, 0xf8, 0x60, 0x65, 0x5f, 0xa8, 0x29, 0xee,
	0xcb, 0xbb, 0x9f, 0xfc, 0x29, 0x7e, 0x96, 0xe7, 0xf2, 0x83, 0xbf, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xdd, 0xa0, 0x5b, 0x7c, 0xc5, 0x0f, 0x00, 0x00,
}
