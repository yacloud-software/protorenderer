// Code generated by protoc-gen-go.
// source: protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto
// DO NOT EDIT!

/*
Package protorenderer2 is a generated protocol buffer package.

It is generated from these files:
	protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto

It has these top-level messages:
	ProtoFileInfo
	ProtoMessageInfo
	ProtoFieldInfo
	ProtoFieldInfoText
	DBProtoFile
	SQLMessage
	ProtocRequest
	FileTransfer
	FileResult
	CompileResult
	VersionInfo
	VersionFile
*/
package protorenderer2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protorenderer "golang.conradwood.net/apis/protorenderer"
import common "golang.conradwood.net/apis/common"
import _ "golang.conradwood.net/apis/h2gproxy"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type FieldModifier int32

const (
	FieldModifier_FM_UNDEFINED FieldModifier = 0
	FieldModifier_SINGLE       FieldModifier = 1
	FieldModifier_MAP          FieldModifier = 2
	FieldModifier_ARRAY        FieldModifier = 3
)

var FieldModifier_name = map[int32]string{
	0: "FM_UNDEFINED",
	1: "SINGLE",
	2: "MAP",
	3: "ARRAY",
}
var FieldModifier_value = map[string]int32{
	"FM_UNDEFINED": 0,
	"SINGLE":       1,
	"MAP":          2,
	"ARRAY":        3,
}

func (x FieldModifier) String() string {
	return proto.EnumName(FieldModifier_name, int32(x))
}
func (FieldModifier) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type FieldType int32

const (
	FieldType_ft_UNDEFINED FieldType = 0
	FieldType_PRIMITIVE    FieldType = 1
	FieldType_OBJECT       FieldType = 2
)

var FieldType_name = map[int32]string{
	0: "ft_UNDEFINED",
	1: "PRIMITIVE",
	2: "OBJECT",
}
var FieldType_value = map[string]int32{
	"ft_UNDEFINED": 0,
	"PRIMITIVE":    1,
	"OBJECT":       2,
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}
func (FieldType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ProtoFieldPrimitive int32

const (
	ProtoFieldPrimitive_PFT_UNDEFINED ProtoFieldPrimitive = 0
	ProtoFieldPrimitive_STRING        ProtoFieldPrimitive = 1
	ProtoFieldPrimitive_UINT64        ProtoFieldPrimitive = 2
	ProtoFieldPrimitive_UINT32        ProtoFieldPrimitive = 3
	ProtoFieldPrimitive_BYTES         ProtoFieldPrimitive = 4
	ProtoFieldPrimitive_BOOL          ProtoFieldPrimitive = 5
	ProtoFieldPrimitive_INT32         ProtoFieldPrimitive = 6
	ProtoFieldPrimitive_ENUM          ProtoFieldPrimitive = 7
	ProtoFieldPrimitive_DOUBLE        ProtoFieldPrimitive = 8
	ProtoFieldPrimitive_FLOAT         ProtoFieldPrimitive = 9
	ProtoFieldPrimitive_INT64         ProtoFieldPrimitive = 10
	ProtoFieldPrimitive_SINT32        ProtoFieldPrimitive = 11
	ProtoFieldPrimitive_SINT64        ProtoFieldPrimitive = 12
)

var ProtoFieldPrimitive_name = map[int32]string{
	0:  "PFT_UNDEFINED",
	1:  "STRING",
	2:  "UINT64",
	3:  "UINT32",
	4:  "BYTES",
	5:  "BOOL",
	6:  "INT32",
	7:  "ENUM",
	8:  "DOUBLE",
	9:  "FLOAT",
	10: "INT64",
	11: "SINT32",
	12: "SINT64",
}
var ProtoFieldPrimitive_value = map[string]int32{
	"PFT_UNDEFINED": 0,
	"STRING":        1,
	"UINT64":        2,
	"UINT32":        3,
	"BYTES":         4,
	"BOOL":          5,
	"INT32":         6,
	"ENUM":          7,
	"DOUBLE":        8,
	"FLOAT":         9,
	"INT64":         10,
	"SINT32":        11,
	"SINT64":        12,
}

func (x ProtoFieldPrimitive) String() string {
	return proto.EnumName(ProtoFieldPrimitive_name, int32(x))
}
func (ProtoFieldPrimitive) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

// information parsed out of a .proto file, enriched with references to database IDs, created by meta
type ProtoFileInfo struct {
	ProtoFile  *DBProtoFile        `protobuf:"bytes,1,opt,name=ProtoFile" json:"ProtoFile,omitempty"`
	Imports    []*DBProtoFile      `protobuf:"bytes,2,rep,name=Imports" json:"Imports,omitempty"`
	CNWOptions map[string]string   `protobuf:"bytes,3,rep,name=CNWOptions" json:"CNWOptions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Messages   []*ProtoMessageInfo `protobuf:"bytes,4,rep,name=Messages" json:"Messages,omitempty"`
}

func (m *ProtoFileInfo) Reset()                    { *m = ProtoFileInfo{} }
func (m *ProtoFileInfo) String() string            { return proto.CompactTextString(m) }
func (*ProtoFileInfo) ProtoMessage()               {}
func (*ProtoFileInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProtoFileInfo) GetProtoFile() *DBProtoFile {
	if m != nil {
		return m.ProtoFile
	}
	return nil
}

func (m *ProtoFileInfo) GetImports() []*DBProtoFile {
	if m != nil {
		return m.Imports
	}
	return nil
}

func (m *ProtoFileInfo) GetCNWOptions() map[string]string {
	if m != nil {
		return m.CNWOptions
	}
	return nil
}

func (m *ProtoFileInfo) GetMessages() []*ProtoMessageInfo {
	if m != nil {
		return m.Messages
	}
	return nil
}

type ProtoMessageInfo struct {
	Message *SQLMessage       `protobuf:"bytes,1,opt,name=Message" json:"Message,omitempty"`
	Comment string            `protobuf:"bytes,2,opt,name=Comment" json:"Comment,omitempty"`
	Fields  []*ProtoFieldInfo `protobuf:"bytes,3,rep,name=Fields" json:"Fields,omitempty"`
}

func (m *ProtoMessageInfo) Reset()                    { *m = ProtoMessageInfo{} }
func (m *ProtoMessageInfo) String() string            { return proto.CompactTextString(m) }
func (*ProtoMessageInfo) ProtoMessage()               {}
func (*ProtoMessageInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ProtoMessageInfo) GetMessage() *SQLMessage {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *ProtoMessageInfo) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ProtoMessageInfo) GetFields() []*ProtoFieldInfo {
	if m != nil {
		return m.Fields
	}
	return nil
}

type ProtoFieldInfo struct {
	Name                  string              `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Comment               string              `protobuf:"bytes,2,opt,name=Comment" json:"Comment,omitempty"`
	Modifier              FieldModifier       `protobuf:"varint,3,opt,name=Modifier,enum=protorenderer2.FieldModifier" json:"Modifier,omitempty"`
	Type1                 FieldType           `protobuf:"varint,4,opt,name=Type1,enum=protorenderer2.FieldType" json:"Type1,omitempty"`
	Type2                 FieldType           `protobuf:"varint,5,opt,name=Type2,enum=protorenderer2.FieldType" json:"Type2,omitempty"`
	PrimitiveType1        ProtoFieldPrimitive `protobuf:"varint,6,opt,name=PrimitiveType1,enum=protorenderer2.ProtoFieldPrimitive" json:"PrimitiveType1,omitempty"`
	PrimitiveType2        ProtoFieldPrimitive `protobuf:"varint,7,opt,name=PrimitiveType2,enum=protorenderer2.ProtoFieldPrimitive" json:"PrimitiveType2,omitempty"`
	ObjectID1             uint64              `protobuf:"varint,8,opt,name=ObjectID1" json:"ObjectID1,omitempty"`
	ObjectID2             uint64              `protobuf:"varint,9,opt,name=ObjectID2" json:"ObjectID2,omitempty"`
	TextualRepresentation *ProtoFieldInfoText `protobuf:"bytes,10,opt,name=TextualRepresentation" json:"TextualRepresentation,omitempty"`
}

func (m *ProtoFieldInfo) Reset()                    { *m = ProtoFieldInfo{} }
func (m *ProtoFieldInfo) String() string            { return proto.CompactTextString(m) }
func (*ProtoFieldInfo) ProtoMessage()               {}
func (*ProtoFieldInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ProtoFieldInfo) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ProtoFieldInfo) GetComment() string {
	if m != nil {
		return m.Comment
	}
	return ""
}

func (m *ProtoFieldInfo) GetModifier() FieldModifier {
	if m != nil {
		return m.Modifier
	}
	return FieldModifier_FM_UNDEFINED
}

func (m *ProtoFieldInfo) GetType1() FieldType {
	if m != nil {
		return m.Type1
	}
	return FieldType_ft_UNDEFINED
}

func (m *ProtoFieldInfo) GetType2() FieldType {
	if m != nil {
		return m.Type2
	}
	return FieldType_ft_UNDEFINED
}

func (m *ProtoFieldInfo) GetPrimitiveType1() ProtoFieldPrimitive {
	if m != nil {
		return m.PrimitiveType1
	}
	return ProtoFieldPrimitive_PFT_UNDEFINED
}

func (m *ProtoFieldInfo) GetPrimitiveType2() ProtoFieldPrimitive {
	if m != nil {
		return m.PrimitiveType2
	}
	return ProtoFieldPrimitive_PFT_UNDEFINED
}

func (m *ProtoFieldInfo) GetObjectID1() uint64 {
	if m != nil {
		return m.ObjectID1
	}
	return 0
}

func (m *ProtoFieldInfo) GetObjectID2() uint64 {
	if m != nil {
		return m.ObjectID2
	}
	return 0
}

func (m *ProtoFieldInfo) GetTextualRepresentation() *ProtoFieldInfoText {
	if m != nil {
		return m.TextualRepresentation
	}
	return nil
}

type ProtoFieldInfoText struct {
	ModifierString       string `protobuf:"bytes,1,opt,name=ModifierString" json:"ModifierString,omitempty"`
	Type1String          string `protobuf:"bytes,2,opt,name=Type1String" json:"Type1String,omitempty"`
	Type2String          string `protobuf:"bytes,3,opt,name=Type2String" json:"Type2String,omitempty"`
	PrimitiveType1String string `protobuf:"bytes,4,opt,name=PrimitiveType1String" json:"PrimitiveType1String,omitempty"`
	PrimitiveType2String string `protobuf:"bytes,5,opt,name=PrimitiveType2String" json:"PrimitiveType2String,omitempty"`
	ObjectID1String      string `protobuf:"bytes,6,opt,name=ObjectID1String" json:"ObjectID1String,omitempty"`
	ObjectID2String      string `protobuf:"bytes,7,opt,name=ObjectID2String" json:"ObjectID2String,omitempty"`
}

func (m *ProtoFieldInfoText) Reset()                    { *m = ProtoFieldInfoText{} }
func (m *ProtoFieldInfoText) String() string            { return proto.CompactTextString(m) }
func (*ProtoFieldInfoText) ProtoMessage()               {}
func (*ProtoFieldInfoText) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *ProtoFieldInfoText) GetModifierString() string {
	if m != nil {
		return m.ModifierString
	}
	return ""
}

func (m *ProtoFieldInfoText) GetType1String() string {
	if m != nil {
		return m.Type1String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetType2String() string {
	if m != nil {
		return m.Type2String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetPrimitiveType1String() string {
	if m != nil {
		return m.PrimitiveType1String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetPrimitiveType2String() string {
	if m != nil {
		return m.PrimitiveType2String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetObjectID1String() string {
	if m != nil {
		return m.ObjectID1String
	}
	return ""
}

func (m *ProtoFieldInfoText) GetObjectID2String() string {
	if m != nil {
		return m.ObjectID2String
	}
	return ""
}

// keeping a file in database with metadata
type DBProtoFile struct {
	ID           uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Name         string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	RepositoryID uint64 `protobuf:"varint,3,opt,name=RepositoryID" json:"RepositoryID,omitempty"`
	Package      string `protobuf:"bytes,4,opt,name=Package" json:"Package,omitempty"`
}

func (m *DBProtoFile) Reset()                    { *m = DBProtoFile{} }
func (m *DBProtoFile) String() string            { return proto.CompactTextString(m) }
func (*DBProtoFile) ProtoMessage()               {}
func (*DBProtoFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *DBProtoFile) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *DBProtoFile) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DBProtoFile) GetRepositoryID() uint64 {
	if m != nil {
		return m.RepositoryID
	}
	return 0
}

func (m *DBProtoFile) GetPackage() string {
	if m != nil {
		return m.Package
	}
	return ""
}

type SQLMessage struct {
	ID        uint64       `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	ProtoFile *DBProtoFile `protobuf:"bytes,2,opt,name=ProtoFile" json:"ProtoFile,omitempty"`
	Name      string       `protobuf:"bytes,3,opt,name=Name" json:"Name,omitempty"`
}

func (m *SQLMessage) Reset()                    { *m = SQLMessage{} }
func (m *SQLMessage) String() string            { return proto.CompactTextString(m) }
func (*SQLMessage) ProtoMessage()               {}
func (*SQLMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *SQLMessage) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *SQLMessage) GetProtoFile() *DBProtoFile {
	if m != nil {
		return m.ProtoFile
	}
	return nil
}

func (m *SQLMessage) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ProtocRequest struct {
	MetaCompilerID string                                 `protobuf:"bytes,1,opt,name=MetaCompilerID" json:"MetaCompilerID,omitempty"`
	ProtoFiles     []*google_protobuf.FileDescriptorProto `protobuf:"bytes,2,rep,name=ProtoFiles" json:"ProtoFiles,omitempty"`
}

func (m *ProtocRequest) Reset()                    { *m = ProtocRequest{} }
func (m *ProtocRequest) String() string            { return proto.CompactTextString(m) }
func (*ProtocRequest) ProtoMessage()               {}
func (*ProtocRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ProtocRequest) GetMetaCompilerID() string {
	if m != nil {
		return m.MetaCompilerID
	}
	return ""
}

func (m *ProtocRequest) GetProtoFiles() []*google_protobuf.FileDescriptorProto {
	if m != nil {
		return m.ProtoFiles
	}
	return nil
}

type FileTransfer struct {
	Filename         string      `protobuf:"bytes,1,opt,name=Filename" json:"Filename,omitempty"`
	Data             []byte      `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	TransferComplete bool        `protobuf:"varint,3,opt,name=TransferComplete" json:"TransferComplete,omitempty"`
	RepositoryID     uint32      `protobuf:"varint,4,opt,name=RepositoryID" json:"RepositoryID,omitempty"`
	Result           *FileResult `protobuf:"bytes,5,opt,name=Result" json:"Result,omitempty"`
}

func (m *FileTransfer) Reset()                    { *m = FileTransfer{} }
func (m *FileTransfer) String() string            { return proto.CompactTextString(m) }
func (*FileTransfer) ProtoMessage()               {}
func (*FileTransfer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *FileTransfer) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileTransfer) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileTransfer) GetTransferComplete() bool {
	if m != nil {
		return m.TransferComplete
	}
	return false
}

func (m *FileTransfer) GetRepositoryID() uint32 {
	if m != nil {
		return m.RepositoryID
	}
	return 0
}

func (m *FileTransfer) GetResult() *FileResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type FileResult struct {
	//  bool Failed=1; // if at least one compiler failed, this is set
	Filename       string           `protobuf:"bytes,2,opt,name=Filename" json:"Filename,omitempty"`
	CompileResults []*CompileResult `protobuf:"bytes,3,rep,name=CompileResults" json:"CompileResults,omitempty"`
}

func (m *FileResult) Reset()                    { *m = FileResult{} }
func (m *FileResult) String() string            { return proto.CompactTextString(m) }
func (*FileResult) ProtoMessage()               {}
func (*FileResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *FileResult) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileResult) GetCompileResults() []*CompileResult {
	if m != nil {
		return m.CompileResults
	}
	return nil
}

type CompileResult struct {
	CompilerName string `protobuf:"bytes,1,opt,name=CompilerName" json:"CompilerName,omitempty"`
	Success      bool   `protobuf:"varint,2,opt,name=Success" json:"Success,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=ErrorMessage" json:"ErrorMessage,omitempty"`
	Output       []byte `protobuf:"bytes,4,opt,name=Output,proto3" json:"Output,omitempty"`
}

func (m *CompileResult) Reset()                    { *m = CompileResult{} }
func (m *CompileResult) String() string            { return proto.CompactTextString(m) }
func (*CompileResult) ProtoMessage()               {}
func (*CompileResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *CompileResult) GetCompilerName() string {
	if m != nil {
		return m.CompilerName
	}
	return ""
}

func (m *CompileResult) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *CompileResult) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *CompileResult) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

type VersionInfo struct {
	Files   []*VersionFile `protobuf:"bytes,1,rep,name=Files" json:"Files,omitempty"`
	Created uint32         `protobuf:"varint,2,opt,name=Created" json:"Created,omitempty"`
}

func (m *VersionInfo) Reset()                    { *m = VersionInfo{} }
func (m *VersionInfo) String() string            { return proto.CompactTextString(m) }
func (*VersionInfo) ProtoMessage()               {}
func (*VersionInfo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *VersionInfo) GetFiles() []*VersionFile {
	if m != nil {
		return m.Files
	}
	return nil
}

func (m *VersionInfo) GetCreated() uint32 {
	if m != nil {
		return m.Created
	}
	return 0
}

type VersionFile struct {
	Filename   string      `protobuf:"bytes,1,opt,name=Filename" json:"Filename,omitempty"`
	FileResult *FileResult `protobuf:"bytes,2,opt,name=FileResult" json:"FileResult,omitempty"`
}

func (m *VersionFile) Reset()                    { *m = VersionFile{} }
func (m *VersionFile) String() string            { return proto.CompactTextString(m) }
func (*VersionFile) ProtoMessage()               {}
func (*VersionFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *VersionFile) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *VersionFile) GetFileResult() *FileResult {
	if m != nil {
		return m.FileResult
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtoFileInfo)(nil), "protorenderer2.ProtoFileInfo")
	proto.RegisterType((*ProtoMessageInfo)(nil), "protorenderer2.ProtoMessageInfo")
	proto.RegisterType((*ProtoFieldInfo)(nil), "protorenderer2.ProtoFieldInfo")
	proto.RegisterType((*ProtoFieldInfoText)(nil), "protorenderer2.ProtoFieldInfoText")
	proto.RegisterType((*DBProtoFile)(nil), "protorenderer2.DBProtoFile")
	proto.RegisterType((*SQLMessage)(nil), "protorenderer2.SQLMessage")
	proto.RegisterType((*ProtocRequest)(nil), "protorenderer2.ProtocRequest")
	proto.RegisterType((*FileTransfer)(nil), "protorenderer2.FileTransfer")
	proto.RegisterType((*FileResult)(nil), "protorenderer2.FileResult")
	proto.RegisterType((*CompileResult)(nil), "protorenderer2.CompileResult")
	proto.RegisterType((*VersionInfo)(nil), "protorenderer2.VersionInfo")
	proto.RegisterType((*VersionFile)(nil), "protorenderer2.VersionFile")
	proto.RegisterEnum("protorenderer2.FieldModifier", FieldModifier_name, FieldModifier_value)
	proto.RegisterEnum("protorenderer2.FieldType", FieldType_name, FieldType_value)
	proto.RegisterEnum("protorenderer2.ProtoFieldPrimitive", ProtoFieldPrimitive_name, ProtoFieldPrimitive_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProtoRenderer2 service

type ProtoRenderer2Client interface {
	// protoc-gen-meta2 submits files to protorenderer server for analysis. not intented to be used by clients other than protoc-gen-meta2
	InternalMetaSubmit(ctx context.Context, in *ProtocRequest, opts ...grpc.CallOption) (*common.Void, error)
	// compile
	Compile(ctx context.Context, opts ...grpc.CallOption) (ProtoRenderer2_CompileClient, error)
	// add or update a ".proto" file in the renderers database
	UpdateProto(ctx context.Context, in *protorenderer.AddProtoRequest, opts ...grpc.CallOption) (*protorenderer.AddProtoResponse, error)
}

type protoRenderer2Client struct {
	cc *grpc.ClientConn
}

func NewProtoRenderer2Client(cc *grpc.ClientConn) ProtoRenderer2Client {
	return &protoRenderer2Client{cc}
}

func (c *protoRenderer2Client) InternalMetaSubmit(ctx context.Context, in *ProtocRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/protorenderer2.ProtoRenderer2/InternalMetaSubmit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoRenderer2Client) Compile(ctx context.Context, opts ...grpc.CallOption) (ProtoRenderer2_CompileClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProtoRenderer2_serviceDesc.Streams[0], c.cc, "/protorenderer2.ProtoRenderer2/Compile", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoRenderer2CompileClient{stream}
	return x, nil
}

type ProtoRenderer2_CompileClient interface {
	Send(*FileTransfer) error
	Recv() (*FileTransfer, error)
	grpc.ClientStream
}

type protoRenderer2CompileClient struct {
	grpc.ClientStream
}

func (x *protoRenderer2CompileClient) Send(m *FileTransfer) error {
	return x.ClientStream.SendMsg(m)
}

func (x *protoRenderer2CompileClient) Recv() (*FileTransfer, error) {
	m := new(FileTransfer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *protoRenderer2Client) UpdateProto(ctx context.Context, in *protorenderer.AddProtoRequest, opts ...grpc.CallOption) (*protorenderer.AddProtoResponse, error) {
	out := new(protorenderer.AddProtoResponse)
	err := grpc.Invoke(ctx, "/protorenderer2.ProtoRenderer2/UpdateProto", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProtoRenderer2 service

type ProtoRenderer2Server interface {
	// protoc-gen-meta2 submits files to protorenderer server for analysis. not intented to be used by clients other than protoc-gen-meta2
	InternalMetaSubmit(context.Context, *ProtocRequest) (*common.Void, error)
	// compile
	Compile(ProtoRenderer2_CompileServer) error
	// add or update a ".proto" file in the renderers database
	UpdateProto(context.Context, *protorenderer.AddProtoRequest) (*protorenderer.AddProtoResponse, error)
}

func RegisterProtoRenderer2Server(s *grpc.Server, srv ProtoRenderer2Server) {
	s.RegisterService(&_ProtoRenderer2_serviceDesc, srv)
}

func _ProtoRenderer2_InternalMetaSubmit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProtocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoRenderer2Server).InternalMetaSubmit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protorenderer2.ProtoRenderer2/InternalMetaSubmit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoRenderer2Server).InternalMetaSubmit(ctx, req.(*ProtocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoRenderer2_Compile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProtoRenderer2Server).Compile(&protoRenderer2CompileServer{stream})
}

type ProtoRenderer2_CompileServer interface {
	Send(*FileTransfer) error
	Recv() (*FileTransfer, error)
	grpc.ServerStream
}

type protoRenderer2CompileServer struct {
	grpc.ServerStream
}

func (x *protoRenderer2CompileServer) Send(m *FileTransfer) error {
	return x.ServerStream.SendMsg(m)
}

func (x *protoRenderer2CompileServer) Recv() (*FileTransfer, error) {
	m := new(FileTransfer)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProtoRenderer2_UpdateProto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protorenderer.AddProtoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoRenderer2Server).UpdateProto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protorenderer2.ProtoRenderer2/UpdateProto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoRenderer2Server).UpdateProto(ctx, req.(*protorenderer.AddProtoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProtoRenderer2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protorenderer2.ProtoRenderer2",
	HandlerType: (*ProtoRenderer2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InternalMetaSubmit",
			Handler:    _ProtoRenderer2_InternalMetaSubmit_Handler,
		},
		{
			MethodName: "UpdateProto",
			Handler:    _ProtoRenderer2_UpdateProto_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Compile",
			Handler:       _ProtoRenderer2_Compile_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto",
}

func init() {
	proto.RegisterFile("protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 1247 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x57, 0x4f, 0x73, 0xdb, 0xb6,
	0x12, 0x7f, 0xd4, 0x7f, 0xad, 0x25, 0x85, 0x0f, 0x2f, 0xef, 0x8d, 0xa2, 0x97, 0xb4, 0x1a, 0xb6,
	0xd3, 0x71, 0x3c, 0x53, 0xb9, 0x61, 0x5c, 0x4f, 0x92, 0x49, 0x0f, 0x92, 0x25, 0x67, 0xd8, 0x5a,
	0x92, 0x0b, 0xcb, 0x4e, 0x93, 0x4b, 0x87, 0x16, 0x61, 0x95, 0x8d, 0x44, 0xb0, 0x24, 0x94, 0xc6,
	0x87, 0x5e, 0x72, 0xeb, 0xf4, 0x1b, 0xe4, 0xd8, 0x4f, 0xd0, 0x0f, 0xd0, 0x53, 0xef, 0xfd, 0x2a,
	0xfd, 0x0c, 0x1d, 0x80, 0x00, 0x45, 0x52, 0x8a, 0x92, 0xe9, 0x49, 0xd8, 0xc5, 0xef, 0xb7, 0xd8,
	0x5d, 0x2c, 0x77, 0x21, 0x18, 0xf8, 0x01, 0x65, 0x34, 0xdc, 0x9f, 0xd1, 0xb9, 0xed, 0xcd, 0x3a,
	0x53, 0xea, 0x05, 0xb6, 0xf3, 0x23, 0xa5, 0x4e, 0xc7, 0x23, 0x6c, 0xdf, 0xf6, 0xdd, 0x70, 0x5f,
	0x20, 0x02, 0xe2, 0x39, 0x24, 0x20, 0x81, 0x99, 0x11, 0x3b, 0x42, 0x44, 0x8d, 0xb4, 0xb6, 0xf5,
	0xf8, 0x7d, 0xed, 0xa5, 0xa5, 0xc8, 0x5a, 0xab, 0xb3, 0x85, 0x3d, 0xa5, 0x8b, 0x05, 0xf5, 0xe4,
	0x8f, 0xc4, 0x9b, 0x5b, 0xf0, 0xdf, 0x99, 0x33, 0x3f, 0xa0, 0xaf, 0xae, 0xe3, 0x85, 0xe4, 0xb4,
	0x67, 0x94, 0xce, 0xe6, 0x24, 0x3a, 0xff, 0x72, 0x79, 0xb5, 0xef, 0x90, 0x70, 0x1a, 0xb8, 0x3e,
	0xa3, 0xd2, 0x0b, 0xe3, 0xcf, 0x1c, 0xd4, 0x4f, 0xf9, 0xea, 0xd8, 0x9d, 0x13, 0xcb, 0xbb, 0xa2,
	0xe8, 0x21, 0x54, 0x63, 0x45, 0x53, 0x6b, 0x6b, 0xbb, 0x3b, 0xe6, 0xff, 0x3b, 0x99, 0x7c, 0xf4,
	0x7b, 0x31, 0x04, 0xaf, 0xd0, 0xe8, 0x73, 0x28, 0x5b, 0x0b, 0x9f, 0x06, 0x2c, 0x6c, 0xe6, 0xda,
	0xf9, 0x77, 0x11, 0x15, 0x16, 0x0d, 0x01, 0x8e, 0x46, 0x4f, 0xc7, 0x3e, 0x73, 0xa9, 0x17, 0x36,
	0xf3, 0x82, 0xf9, 0x69, 0x96, 0x99, 0x72, 0xb2, 0xb3, 0xc2, 0x0f, 0x3c, 0x16, 0x5c, 0xe3, 0x84,
	0x01, 0xf4, 0x18, 0x2a, 0x43, 0x12, 0x86, 0xf6, 0x8c, 0x84, 0xcd, 0x82, 0x30, 0xd6, 0xde, 0x68,
	0x4c, 0x82, 0xb8, 0x3d, 0x1c, 0x33, 0x5a, 0x5f, 0xc0, 0x8d, 0x8c, 0x71, 0xa4, 0x43, 0xfe, 0x05,
	0xb9, 0x16, 0xb9, 0xa8, 0x62, 0xbe, 0x44, 0x37, 0xa1, 0xf8, 0xd2, 0x9e, 0x2f, 0x49, 0x33, 0x27,
	0x74, 0x91, 0xf0, 0x28, 0xf7, 0x40, 0x33, 0xde, 0x68, 0xa0, 0x67, 0xad, 0xa3, 0x03, 0x28, 0x4b,
	0x51, 0x26, 0xb4, 0x95, 0x75, 0xe8, 0xec, 0xeb, 0x13, 0x89, 0xc0, 0x0a, 0x8a, 0x9a, 0x50, 0x3e,
	0xa2, 0x8b, 0x05, 0xf1, 0x98, 0x3c, 0x46, 0x89, 0xe8, 0x10, 0x4a, 0xc7, 0x2e, 0x99, 0x3b, 0x2a,
	0x59, 0x1f, 0xbc, 0x25, 0x59, 0x64, 0xee, 0x88, 0xe8, 0x24, 0xda, 0xf8, 0xa5, 0x00, 0x8d, 0xf4,
	0x16, 0x42, 0x50, 0x18, 0xd9, 0x0b, 0x22, 0x83, 0x13, 0xeb, 0x2d, 0x07, 0x3f, 0x84, 0xca, 0x90,
	0x3a, 0xee, 0x95, 0x4b, 0x82, 0x66, 0xbe, 0xad, 0xed, 0x36, 0xcc, 0x3b, 0xd9, 0xa3, 0x85, 0x69,
	0x05, 0xc2, 0x31, 0x1c, 0xed, 0x43, 0x71, 0x72, 0xed, 0x93, 0x7b, 0xcd, 0x82, 0xe0, 0xdd, 0xda,
	0xc8, 0xe3, 0x08, 0x1c, 0xe1, 0x14, 0xc1, 0x6c, 0x16, 0xdf, 0x8b, 0x60, 0xa2, 0xaf, 0x78, 0x70,
	0xee, 0xc2, 0x65, 0xee, 0x4b, 0x12, 0x1d, 0x55, 0x12, 0xcc, 0x8f, 0xde, 0x9e, 0x9d, 0x18, 0x8f,
	0x33, 0xd4, 0x35, 0x63, 0x66, 0xb3, 0xfc, 0x4f, 0x8d, 0x99, 0xe8, 0x36, 0x54, 0xc7, 0x97, 0xdf,
	0x93, 0x29, 0xb3, 0xfa, 0xf7, 0x9a, 0x95, 0xb6, 0xb6, 0x5b, 0xc0, 0x2b, 0x45, 0x72, 0xd7, 0x6c,
	0x56, 0xd3, 0xbb, 0x26, 0xfa, 0x06, 0xfe, 0x3b, 0x21, 0xaf, 0xd8, 0xd2, 0x9e, 0x63, 0xe2, 0x07,
	0x24, 0x24, 0x1e, 0xb3, 0x79, 0x6d, 0x36, 0x41, 0x54, 0x92, 0xb1, 0xfd, 0xea, 0x39, 0x15, 0x6f,
	0x36, 0x60, 0xfc, 0x9e, 0x03, 0xb4, 0x8e, 0x46, 0x9f, 0x40, 0x43, 0x5d, 0xda, 0x19, 0x0b, 0x5c,
	0x6f, 0x26, 0x6b, 0x23, 0xa3, 0x45, 0x6d, 0xd8, 0x11, 0xa9, 0x92, 0xa0, 0xa8, 0x52, 0x92, 0x2a,
	0x85, 0x30, 0x25, 0x22, 0xbf, 0x42, 0x48, 0x15, 0x32, 0xe1, 0x66, 0x3a, 0xef, 0x12, 0x5a, 0x10,
	0xd0, 0x8d, 0x7b, 0x6b, 0x1c, 0x65, 0xbe, 0xb8, 0x81, 0xa3, 0xce, 0xd9, 0x85, 0x1b, 0x71, 0xbe,
	0x25, 0xbc, 0x24, 0xe0, 0x59, 0x75, 0x12, 0xa9, 0x0c, 0x97, 0xd3, 0x48, 0xa9, 0x36, 0x28, 0xec,
	0x24, 0xba, 0x19, 0x6a, 0x40, 0xce, 0xea, 0x8b, 0x54, 0x15, 0x70, 0xce, 0xea, 0xc7, 0x1f, 0x56,
	0x2e, 0xf1, 0x61, 0x19, 0x50, 0xc3, 0xc4, 0xa7, 0xa1, 0xcb, 0x68, 0x70, 0x6d, 0xf5, 0x45, 0x46,
	0x0a, 0x38, 0xa5, 0xe3, 0x1f, 0xdf, 0xa9, 0x3d, 0x7d, 0xc1, 0x7b, 0x45, 0x94, 0x05, 0x25, 0x1a,
	0x3f, 0x6b, 0x00, 0xab, 0x3e, 0xb1, 0x76, 0xe0, 0xd3, 0x64, 0xdf, 0xce, 0xbd, 0xb3, 0x6f, 0xf7,
	0x6e, 0xbf, 0x79, 0x7d, 0xab, 0xb4, 0x74, 0x3d, 0x76, 0x78, 0xf0, 0xeb, 0xeb, 0x5b, 0x0d, 0xe7,
	0x52, 0x60, 0xaf, 0xdc, 0x39, 0xe9, 0xb8, 0x4e, 0xb2, 0xab, 0xab, 0x48, 0xf2, 0xab, 0x48, 0x8c,
	0x9f, 0xe4, 0xd4, 0x98, 0x62, 0xf2, 0xc3, 0x92, 0x84, 0x51, 0xd5, 0x10, 0x66, 0x1f, 0xd1, 0x85,
	0xef, 0xce, 0x49, 0x20, 0x3d, 0xe3, 0x55, 0x93, 0xd2, 0xa2, 0x3e, 0x40, 0x6c, 0x59, 0x4d, 0x89,
	0x8f, 0x3b, 0xd1, 0x98, 0xea, 0xa8, 0x31, 0xd5, 0xe1, 0xbb, 0xfd, 0x78, 0x54, 0x09, 0x02, 0x4e,
	0xf0, 0x8c, 0x3f, 0x34, 0xa8, 0xf1, 0xd5, 0x24, 0xb0, 0xbd, 0xf0, 0x8a, 0x04, 0xa8, 0x05, 0x15,
	0x2e, 0x7b, 0xab, 0x56, 0x16, 0xcb, 0xdc, 0xff, 0xbe, 0xcd, 0x6c, 0x91, 0x93, 0x1a, 0x16, 0x6b,
	0xb4, 0x07, 0xba, 0xe2, 0x72, 0xe7, 0xe6, 0x84, 0x45, 0xf1, 0x55, 0xf0, 0x9a, 0x7e, 0xed, 0xd6,
	0xf8, 0xb5, 0xd4, 0x33, 0xb7, 0x66, 0x42, 0x09, 0x93, 0x70, 0x39, 0x67, 0xa2, 0x0c, 0x37, 0x34,
	0x78, 0x31, 0xf1, 0x04, 0x02, 0x4b, 0xa4, 0x41, 0x01, 0x56, 0xda, 0x54, 0x04, 0xb9, 0x4c, 0x04,
	0x03, 0x68, 0xc8, 0x14, 0x46, 0x60, 0xd5, 0xf7, 0xd7, 0x9a, 0x6f, 0x0a, 0x85, 0x33, 0x24, 0x5e,
	0x40, 0xf5, 0x94, 0x8a, 0x87, 0xa6, 0xee, 0x26, 0x31, 0x05, 0x52, 0x3a, 0x5e, 0x90, 0x67, 0xcb,
	0xe9, 0x94, 0x84, 0xa1, 0xf0, 0xab, 0x82, 0x95, 0xc8, 0xd9, 0x83, 0x20, 0xa0, 0x81, 0x9a, 0x6d,
	0x51, 0x81, 0xa4, 0x74, 0xe8, 0x7f, 0x50, 0x1a, 0x2f, 0x99, 0xbf, 0x64, 0x22, 0x6d, 0x35, 0x2c,
	0x25, 0xe3, 0x39, 0xec, 0x5c, 0x90, 0x20, 0x74, 0xa9, 0x27, 0xc6, 0xd0, 0x3d, 0x28, 0x46, 0x15,
	0xa1, 0x6d, 0x7e, 0x37, 0x48, 0xac, 0xc8, 0x57, 0x84, 0x14, 0x53, 0x2a, 0x20, 0x36, 0x23, 0x8e,
	0xf0, 0xab, 0x8e, 0x95, 0x68, 0x90, 0xd8, 0xb6, 0xa8, 0xdf, 0x6d, 0xb5, 0xf1, 0x28, 0x79, 0x07,
	0xf2, 0xab, 0xd9, 0x76, 0x77, 0x09, 0xf4, 0x5e, 0x17, 0xea, 0xa9, 0x61, 0x87, 0x74, 0xa8, 0x1d,
	0x0f, 0xbf, 0x3d, 0x1f, 0xf5, 0x07, 0xc7, 0xd6, 0x68, 0xd0, 0xd7, 0xff, 0x85, 0x00, 0x4a, 0x67,
	0xd6, 0xe8, 0xc9, 0xc9, 0x40, 0xd7, 0x50, 0x19, 0xf2, 0xc3, 0xee, 0xa9, 0x9e, 0x43, 0x55, 0x28,
	0x76, 0x31, 0xee, 0x3e, 0xd3, 0xf3, 0x7b, 0x0f, 0xa0, 0x1a, 0x8f, 0x31, 0x4e, 0xbf, 0x62, 0x29,
	0x7a, 0x1d, 0xaa, 0xa7, 0xd8, 0x1a, 0x5a, 0x13, 0xeb, 0x82, 0x5b, 0x00, 0x28, 0x8d, 0x7b, 0x5f,
	0x0e, 0x8e, 0x26, 0x7a, 0x6e, 0xef, 0x37, 0x0d, 0xfe, 0xb3, 0x61, 0xf4, 0xa0, 0x7f, 0x43, 0xfd,
	0xf4, 0x78, 0xb2, 0xe6, 0xc4, 0x04, 0x5b, 0xa3, 0x27, 0x91, 0x89, 0x73, 0x6b, 0x34, 0x39, 0x3c,
	0xd0, 0x73, 0x6a, 0x7d, 0xdf, 0xd4, 0xf3, 0xdc, 0xa7, 0xde, 0xb3, 0xc9, 0xe0, 0x4c, 0x2f, 0xa0,
	0x0a, 0x14, 0x7a, 0xe3, 0xf1, 0x89, 0x5e, 0xe4, 0xca, 0x68, 0xbf, 0xc4, 0x95, 0x83, 0xd1, 0xf9,
	0x50, 0x2f, 0x73, 0x56, 0x7f, 0x7c, 0xde, 0x3b, 0x19, 0xe8, 0x15, 0x0e, 0x38, 0x3e, 0x19, 0x77,
	0x27, 0x7a, 0x55, 0x62, 0x0f, 0x0f, 0x74, 0x90, 0x41, 0x73, 0xde, 0x8e, 0x5a, 0x1f, 0x1e, 0xe8,
	0x35, 0xf3, 0x2f, 0x4d, 0xbe, 0x3e, 0xb0, 0xca, 0x2c, 0xea, 0x02, 0xb2, 0x3c, 0x46, 0x02, 0xcf,
	0x9e, 0xf3, 0x3e, 0x71, 0xb6, 0xbc, 0x5c, 0xb8, 0x0c, 0xdd, 0xd9, 0x38, 0xd3, 0x54, 0xab, 0x69,
	0xd5, 0x3a, 0xf2, 0x5d, 0x7c, 0x41, 0x5d, 0x07, 0x59, 0xe2, 0xb1, 0xc2, 0xcb, 0x15, 0xdd, 0xde,
	0x74, 0x71, 0xea, 0x73, 0x6e, 0x6d, 0xdd, 0xdd, 0xd5, 0x3e, 0xd3, 0xd0, 0x08, 0x76, 0xce, 0x7d,
	0xc7, 0x66, 0x44, 0x9c, 0x87, 0x32, 0xaf, 0xaa, 0x4e, 0xd7, 0x71, 0xa4, 0xfb, 0x91, 0x1f, 0x1f,
	0xbe, 0x75, 0x3f, 0xf4, 0xa9, 0x17, 0x92, 0xde, 0x05, 0xdc, 0xf5, 0x08, 0x4b, 0x3e, 0xd8, 0xe5,
	0x13, 0x9e, 0xbf, 0xd9, 0x33, 0xde, 0x3c, 0xbf, 0xfb, 0xde, 0x7f, 0x4e, 0x2e, 0x4b, 0x42, 0xbe,
	0xff, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0x01, 0xc0, 0xdc, 0xb9, 0xd7, 0x0c, 0x00, 0x00,
}
