// Code generated by protoc-gen-go.
// source: protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto
// DO NOT EDIT!

/*
Package protorenderer2 is a generated protocol buffer package.

It is generated from these files:
	protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto

It has these top-level messages:
	ProtocRequest
	FileTransfer
	FileResult
	CompileFailure
*/
package protorenderer2

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import protorenderer "golang.conradwood.net/apis/protorenderer"
import common "golang.conradwood.net/apis/common"
import _ "golang.conradwood.net/apis/h2gproxy"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProtocRequest struct {
	VerifyToken string                                 `protobuf:"bytes,1,opt,name=VerifyToken" json:"VerifyToken,omitempty"`
	ProtoFiles  []*google_protobuf.FileDescriptorProto `protobuf:"bytes,2,rep,name=ProtoFiles" json:"ProtoFiles,omitempty"`
}

func (m *ProtocRequest) Reset()                    { *m = ProtocRequest{} }
func (m *ProtocRequest) String() string            { return proto.CompactTextString(m) }
func (*ProtocRequest) ProtoMessage()               {}
func (*ProtocRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ProtocRequest) GetVerifyToken() string {
	if m != nil {
		return m.VerifyToken
	}
	return ""
}

func (m *ProtocRequest) GetProtoFiles() []*google_protobuf.FileDescriptorProto {
	if m != nil {
		return m.ProtoFiles
	}
	return nil
}

type FileTransfer struct {
	Filename         string      `protobuf:"bytes,1,opt,name=Filename" json:"Filename,omitempty"`
	Data             []byte      `protobuf:"bytes,2,opt,name=Data,proto3" json:"Data,omitempty"`
	TransferComplete bool        `protobuf:"varint,3,opt,name=TransferComplete" json:"TransferComplete,omitempty"`
	RepositoryID     uint32      `protobuf:"varint,4,opt,name=RepositoryID" json:"RepositoryID,omitempty"`
	Result           *FileResult `protobuf:"bytes,5,opt,name=Result" json:"Result,omitempty"`
}

func (m *FileTransfer) Reset()                    { *m = FileTransfer{} }
func (m *FileTransfer) String() string            { return proto.CompactTextString(m) }
func (*FileTransfer) ProtoMessage()               {}
func (*FileTransfer) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FileTransfer) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileTransfer) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FileTransfer) GetTransferComplete() bool {
	if m != nil {
		return m.TransferComplete
	}
	return false
}

func (m *FileTransfer) GetRepositoryID() uint32 {
	if m != nil {
		return m.RepositoryID
	}
	return 0
}

func (m *FileTransfer) GetResult() *FileResult {
	if m != nil {
		return m.Result
	}
	return nil
}

type FileResult struct {
	Failed   bool              `protobuf:"varint,1,opt,name=Failed" json:"Failed,omitempty"`
	Filename string            `protobuf:"bytes,2,opt,name=Filename" json:"Filename,omitempty"`
	Failures []*CompileFailure `protobuf:"bytes,3,rep,name=Failures" json:"Failures,omitempty"`
}

func (m *FileResult) Reset()                    { *m = FileResult{} }
func (m *FileResult) String() string            { return proto.CompactTextString(m) }
func (*FileResult) ProtoMessage()               {}
func (*FileResult) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *FileResult) GetFailed() bool {
	if m != nil {
		return m.Failed
	}
	return false
}

func (m *FileResult) GetFilename() string {
	if m != nil {
		return m.Filename
	}
	return ""
}

func (m *FileResult) GetFailures() []*CompileFailure {
	if m != nil {
		return m.Failures
	}
	return nil
}

type CompileFailure struct {
	CompilerName string `protobuf:"bytes,1,opt,name=CompilerName" json:"CompilerName,omitempty"`
	ErrorMessage string `protobuf:"bytes,2,opt,name=ErrorMessage" json:"ErrorMessage,omitempty"`
	Output       []byte `protobuf:"bytes,3,opt,name=Output,proto3" json:"Output,omitempty"`
}

func (m *CompileFailure) Reset()                    { *m = CompileFailure{} }
func (m *CompileFailure) String() string            { return proto.CompactTextString(m) }
func (*CompileFailure) ProtoMessage()               {}
func (*CompileFailure) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *CompileFailure) GetCompilerName() string {
	if m != nil {
		return m.CompilerName
	}
	return ""
}

func (m *CompileFailure) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *CompileFailure) GetOutput() []byte {
	if m != nil {
		return m.Output
	}
	return nil
}

func init() {
	proto.RegisterType((*ProtocRequest)(nil), "protorenderer2.ProtocRequest")
	proto.RegisterType((*FileTransfer)(nil), "protorenderer2.FileTransfer")
	proto.RegisterType((*FileResult)(nil), "protorenderer2.FileResult")
	proto.RegisterType((*CompileFailure)(nil), "protorenderer2.CompileFailure")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ProtoRenderer2 service

type ProtoRenderer2Client interface {
	// protoc-gen-meta2 submits files to protorenderer server for analysis. not intented to be used by clients other than protoc-gen-meta2
	InternalMetaSubmit(ctx context.Context, in *ProtocRequest, opts ...grpc.CallOption) (*common.Void, error)
	// compile
	Compile(ctx context.Context, opts ...grpc.CallOption) (ProtoRenderer2_CompileClient, error)
	// add or update a ".proto" file in the renderers database
	UpdateProto(ctx context.Context, in *protorenderer.AddProtoRequest, opts ...grpc.CallOption) (*protorenderer.AddProtoResponse, error)
}

type protoRenderer2Client struct {
	cc *grpc.ClientConn
}

func NewProtoRenderer2Client(cc *grpc.ClientConn) ProtoRenderer2Client {
	return &protoRenderer2Client{cc}
}

func (c *protoRenderer2Client) InternalMetaSubmit(ctx context.Context, in *ProtocRequest, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/protorenderer2.ProtoRenderer2/InternalMetaSubmit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *protoRenderer2Client) Compile(ctx context.Context, opts ...grpc.CallOption) (ProtoRenderer2_CompileClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_ProtoRenderer2_serviceDesc.Streams[0], c.cc, "/protorenderer2.ProtoRenderer2/Compile", opts...)
	if err != nil {
		return nil, err
	}
	x := &protoRenderer2CompileClient{stream}
	return x, nil
}

type ProtoRenderer2_CompileClient interface {
	Send(*FileTransfer) error
	Recv() (*FileTransfer, error)
	grpc.ClientStream
}

type protoRenderer2CompileClient struct {
	grpc.ClientStream
}

func (x *protoRenderer2CompileClient) Send(m *FileTransfer) error {
	return x.ClientStream.SendMsg(m)
}

func (x *protoRenderer2CompileClient) Recv() (*FileTransfer, error) {
	m := new(FileTransfer)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *protoRenderer2Client) UpdateProto(ctx context.Context, in *protorenderer.AddProtoRequest, opts ...grpc.CallOption) (*protorenderer.AddProtoResponse, error) {
	out := new(protorenderer.AddProtoResponse)
	err := grpc.Invoke(ctx, "/protorenderer2.ProtoRenderer2/UpdateProto", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ProtoRenderer2 service

type ProtoRenderer2Server interface {
	// protoc-gen-meta2 submits files to protorenderer server for analysis. not intented to be used by clients other than protoc-gen-meta2
	InternalMetaSubmit(context.Context, *ProtocRequest) (*common.Void, error)
	// compile
	Compile(ProtoRenderer2_CompileServer) error
	// add or update a ".proto" file in the renderers database
	UpdateProto(context.Context, *protorenderer.AddProtoRequest) (*protorenderer.AddProtoResponse, error)
}

func RegisterProtoRenderer2Server(s *grpc.Server, srv ProtoRenderer2Server) {
	s.RegisterService(&_ProtoRenderer2_serviceDesc, srv)
}

func _ProtoRenderer2_InternalMetaSubmit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ProtocRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoRenderer2Server).InternalMetaSubmit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protorenderer2.ProtoRenderer2/InternalMetaSubmit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoRenderer2Server).InternalMetaSubmit(ctx, req.(*ProtocRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ProtoRenderer2_Compile_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(ProtoRenderer2Server).Compile(&protoRenderer2CompileServer{stream})
}

type ProtoRenderer2_CompileServer interface {
	Send(*FileTransfer) error
	Recv() (*FileTransfer, error)
	grpc.ServerStream
}

type protoRenderer2CompileServer struct {
	grpc.ServerStream
}

func (x *protoRenderer2CompileServer) Send(m *FileTransfer) error {
	return x.ServerStream.SendMsg(m)
}

func (x *protoRenderer2CompileServer) Recv() (*FileTransfer, error) {
	m := new(FileTransfer)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _ProtoRenderer2_UpdateProto_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(protorenderer.AddProtoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ProtoRenderer2Server).UpdateProto(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protorenderer2.ProtoRenderer2/UpdateProto",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ProtoRenderer2Server).UpdateProto(ctx, req.(*protorenderer.AddProtoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ProtoRenderer2_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protorenderer2.ProtoRenderer2",
	HandlerType: (*ProtoRenderer2Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InternalMetaSubmit",
			Handler:    _ProtoRenderer2_InternalMetaSubmit_Handler,
		},
		{
			MethodName: "UpdateProto",
			Handler:    _ProtoRenderer2_UpdateProto_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Compile",
			Handler:       _ProtoRenderer2_Compile_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto",
}

func init() {
	proto.RegisterFile("protos/golang.conradwood.net/apis/protorenderer2/protorenderer2.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x54, 0x4f, 0x8f, 0xd3, 0x3e,
	0x10, 0x55, 0xda, 0xfd, 0xf5, 0x57, 0xa6, 0xdd, 0x0a, 0xf9, 0x80, 0xa2, 0x88, 0x3f, 0x51, 0xc5,
	0x21, 0xcb, 0x21, 0x45, 0xe1, 0x86, 0xb8, 0x2c, 0x74, 0x57, 0xea, 0x61, 0x17, 0x64, 0x96, 0x1e,
	0xb8, 0xb9, 0xcd, 0x34, 0x44, 0xa4, 0x76, 0xb0, 0x1d, 0x2d, 0x95, 0xf8, 0x74, 0x7c, 0x20, 0x3e,
	0x03, 0xb2, 0xe3, 0x74, 0x9b, 0x00, 0xd5, 0x9e, 0x3a, 0xef, 0xcd, 0x9b, 0xcc, 0x9b, 0xb1, 0x5d,
	0xb8, 0x28, 0xa5, 0xd0, 0x42, 0xcd, 0x32, 0x51, 0x30, 0x9e, 0xc5, 0x6b, 0xc1, 0x25, 0x4b, 0x6f,
	0x85, 0x48, 0x63, 0x8e, 0x7a, 0xc6, 0xca, 0x5c, 0xcd, 0xac, 0x42, 0x22, 0x4f, 0x51, 0xa2, 0x4c,
	0x3a, 0x30, 0xb6, 0x90, 0x4c, 0xda, 0x6c, 0xf0, 0xe6, 0xbe, 0xdf, 0x6b, 0xa3, 0xfa, 0x6b, 0x41,
	0x7c, 0xa4, 0x7a, 0x2d, 0xb6, 0x5b, 0xc1, 0xdd, 0x8f, 0xd3, 0x27, 0x47, 0xf4, 0x5f, 0x92, 0xac,
	0x94, 0xe2, 0xfb, 0x6e, 0x1f, 0xb8, 0x9a, 0x30, 0x13, 0x22, 0x2b, 0xb0, 0xee, 0xbf, 0xaa, 0x36,
	0xb3, 0x14, 0xd5, 0x5a, 0xe6, 0xa5, 0x16, 0xce, 0xc5, 0xf4, 0x16, 0x4e, 0x3f, 0x98, 0x60, 0x4d,
	0xf1, 0x5b, 0x85, 0x4a, 0x93, 0x10, 0x46, 0x4b, 0x94, 0xf9, 0x66, 0x77, 0x23, 0xbe, 0x22, 0xf7,
	0xbd, 0xd0, 0x8b, 0x1e, 0xd0, 0x43, 0x8a, 0xcc, 0x01, 0x6c, 0xc9, 0x65, 0x5e, 0xa0, 0xf2, 0x7b,
	0x61, 0x3f, 0x1a, 0x25, 0xcf, 0xe3, 0xba, 0x53, 0xdc, 0x74, 0x8a, 0x4d, 0x76, 0xbe, 0xef, 0x66,
	0x0b, 0xe8, 0x41, 0xdd, 0xf4, 0xa7, 0x07, 0x63, 0x13, 0xdd, 0x48, 0xc6, 0xd5, 0x06, 0x25, 0x09,
	0x60, 0x68, 0x30, 0x67, 0x5b, 0x74, 0x5d, 0xf7, 0x98, 0x10, 0x38, 0x99, 0x33, 0xcd, 0xfc, 0x5e,
	0xe8, 0x45, 0x63, 0x6a, 0x63, 0xf2, 0x02, 0x1e, 0x36, 0xb5, 0xef, 0xc4, 0xb6, 0x2c, 0x50, 0xa3,
	0xdf, 0x0f, 0xbd, 0x68, 0x48, 0xff, 0xe0, 0xc9, 0x14, 0xc6, 0x14, 0x4b, 0xa1, 0x72, 0x2d, 0xe4,
	0x6e, 0x31, 0xf7, 0x4f, 0x42, 0x2f, 0x3a, 0xa5, 0x2d, 0x8e, 0x24, 0x30, 0xa0, 0xa8, 0xaa, 0x42,
	0xfb, 0xff, 0x85, 0x5e, 0x34, 0x4a, 0x82, 0xb8, 0x73, 0x09, 0x8c, 0x9b, 0x5a, 0x41, 0x9d, 0x72,
	0xfa, 0x03, 0xe0, 0x8e, 0x25, 0x8f, 0x60, 0x70, 0xc9, 0xf2, 0x02, 0x53, 0xeb, 0x7f, 0x48, 0x1d,
	0x6a, 0x4d, 0xd6, 0xeb, 0x4c, 0xf6, 0x1a, 0x86, 0x46, 0x55, 0x49, 0x54, 0x7e, 0xdf, 0xae, 0xf2,
	0x69, 0xb7, 0xaf, 0x99, 0x22, 0x2f, 0xd0, 0xc9, 0xe8, 0x5e, 0x3f, 0x2d, 0x61, 0xd2, 0xce, 0x99,
	0x39, 0x1d, 0x23, 0xaf, 0xef, 0xf6, 0xd8, 0xe2, 0x8c, 0xe6, 0x42, 0x4a, 0x21, 0xaf, 0x50, 0x29,
	0x96, 0x35, 0x8e, 0x5a, 0x9c, 0x99, 0xe4, 0x7d, 0xa5, 0xcb, 0x4a, 0xdb, 0x8d, 0x8e, 0xa9, 0x43,
	0xc9, 0x2f, 0x0f, 0x26, 0xf5, 0x51, 0x36, 0xee, 0xc8, 0x39, 0x90, 0x05, 0xd7, 0x28, 0x39, 0x2b,
	0xae, 0x50, 0xb3, 0x8f, 0xd5, 0x6a, 0x9b, 0x6b, 0xf2, 0xa4, 0x3b, 0x44, 0xeb, 0x92, 0x05, 0xe3,
	0xd8, 0x5d, 0xed, 0xa5, 0xc8, 0x53, 0xb2, 0x80, 0xff, 0x9d, 0x43, 0xf2, 0xf8, 0x6f, 0x4b, 0x6f,
	0x8e, 0x33, 0x38, 0x9a, 0x8d, 0xbc, 0x97, 0x1e, 0xb9, 0x86, 0xd1, 0xa7, 0x32, 0x65, 0x1a, 0x6d,
	0x3f, 0xd2, 0xd9, 0x65, 0x7c, 0x9e, 0xa6, 0xce, 0x7e, 0xed, 0xe3, 0xd9, 0x3f, 0xf3, 0xaa, 0x14,
	0x5c, 0xe1, 0xdb, 0x25, 0x9c, 0x71, 0xd4, 0x87, 0x6f, 0xce, 0xbd, 0x42, 0xf3, 0xec, 0x3a, 0x6e,
	0x3e, 0x9f, 0xdd, 0xfb, 0xff, 0x65, 0x35, 0xb0, 0xf8, 0xd5, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff,
	0x21, 0x5c, 0xb0, 0xaa, 0x9a, 0x04, 0x00, 0x00,
}
