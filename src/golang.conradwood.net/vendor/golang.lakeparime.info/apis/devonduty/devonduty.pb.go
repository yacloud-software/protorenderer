// Code generated by protoc-gen-go.
// source: golang.lakeparime.info/apis/devonduty/devonduty.proto
// DO NOT EDIT!

/*
Package devonduty is a generated protocol buffer package.

It is generated from these files:
	golang.lakeparime.info/apis/devonduty/devonduty.proto

It has these top-level messages:
*/
package devonduty

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"
import auth "golang.conradwood.net/apis/auth"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for DevOnDuty service

type DevOnDutyClient interface {
	//  call this and you shall be dev on duty from hereon
	MakeMeDevOnDuty(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*common.Void, error)
	// who is dev on duty currently?
	WhoIsDevOnDuty(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*auth.User, error)
}

type devOnDutyClient struct {
	cc *grpc.ClientConn
}

func NewDevOnDutyClient(cc *grpc.ClientConn) DevOnDutyClient {
	return &devOnDutyClient{cc}
}

func (c *devOnDutyClient) MakeMeDevOnDuty(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/devonduty.DevOnDuty/MakeMeDevOnDuty", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *devOnDutyClient) WhoIsDevOnDuty(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*auth.User, error) {
	out := new(auth.User)
	err := grpc.Invoke(ctx, "/devonduty.DevOnDuty/WhoIsDevOnDuty", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for DevOnDuty service

type DevOnDutyServer interface {
	//  call this and you shall be dev on duty from hereon
	MakeMeDevOnDuty(context.Context, *common.Void) (*common.Void, error)
	// who is dev on duty currently?
	WhoIsDevOnDuty(context.Context, *common.Void) (*auth.User, error)
}

func RegisterDevOnDutyServer(s *grpc.Server, srv DevOnDutyServer) {
	s.RegisterService(&_DevOnDuty_serviceDesc, srv)
}

func _DevOnDuty_MakeMeDevOnDuty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevOnDutyServer).MakeMeDevOnDuty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/devonduty.DevOnDuty/MakeMeDevOnDuty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevOnDutyServer).MakeMeDevOnDuty(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

func _DevOnDuty_WhoIsDevOnDuty_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DevOnDutyServer).WhoIsDevOnDuty(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/devonduty.DevOnDuty/WhoIsDevOnDuty",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DevOnDutyServer).WhoIsDevOnDuty(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _DevOnDuty_serviceDesc = grpc.ServiceDesc{
	ServiceName: "devonduty.DevOnDuty",
	HandlerType: (*DevOnDutyServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "MakeMeDevOnDuty",
			Handler:    _DevOnDuty_MakeMeDevOnDuty_Handler,
		},
		{
			MethodName: "WhoIsDevOnDuty",
			Handler:    _DevOnDuty_WhoIsDevOnDuty_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.lakeparime.info/apis/devonduty/devonduty.proto",
}

func init() {
	proto.RegisterFile("golang.lakeparime.info/apis/devonduty/devonduty.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x8a, 0x83, 0x30,
	0x10, 0x86, 0x6f, 0x0b, 0x86, 0x65, 0x17, 0x3c, 0xca, 0xb2, 0x0f, 0x20, 0x74, 0x84, 0x96, 0xbe,
	0x40, 0xf1, 0xd2, 0x83, 0xf4, 0xd4, 0xf6, 0x3c, 0x35, 0xa3, 0x06, 0x4d, 0x26, 0xc4, 0x68, 0xf1,
	0xed, 0x4b, 0x55, 0x6a, 0x7b, 0x68, 0x2f, 0xc9, 0xcc, 0xcf, 0x3f, 0xdf, 0xfc, 0x8c, 0xd8, 0x96,
	0xdc, 0xa0, 0x29, 0xa1, 0xc1, 0x9a, 0x2c, 0x3a, 0xa5, 0x09, 0x94, 0x29, 0x38, 0x41, 0xab, 0xda,
	0x44, 0x52, 0xcf, 0x46, 0x76, 0x7e, 0x58, 0x2a, 0xb0, 0x8e, 0x3d, 0x87, 0xc1, 0x43, 0x88, 0x60,
	0x26, 0xe4, 0x6c, 0x1c, 0xca, 0x2b, 0xb3, 0x04, 0x43, 0x7e, 0x02, 0xe4, 0xac, 0x35, 0x9b, 0xf9,
	0x9b, 0x46, 0xa3, 0xf8, 0x83, 0x1f, 0x3b, 0x5f, 0x8d, 0xcf, 0xe4, 0x5d, 0x17, 0x22, 0x48, 0xa9,
	0x3f, 0x98, 0xb4, 0xf3, 0x43, 0xb8, 0x12, 0xbf, 0x19, 0xd6, 0x94, 0xd1, 0x22, 0x7d, 0xc3, 0x8c,
	0x3e, 0xb1, 0x92, 0xd1, 0x4b, 0x17, 0xc6, 0xe2, 0xe7, 0x5c, 0xf1, 0xbe, 0x7d, 0xe7, 0x16, 0x30,
	0x2e, 0x3a, 0xb6, 0xe4, 0x76, 0xff, 0xe2, 0x2f, 0x67, 0xfd, 0x7c, 0x84, 0x7b, 0x1c, 0xf0, 0xa4,
	0x6d, 0x83, 0x9e, 0x2e, 0x5f, 0x63, 0x9c, 0xcd, 0x2d, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x83, 0x21,
	0xae, 0x2e, 0x01, 0x00, 0x00,
}
