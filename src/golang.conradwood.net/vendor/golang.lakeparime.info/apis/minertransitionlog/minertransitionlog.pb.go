// Code generated by protoc-gen-go.
// source: golang.lakeparime.info/apis/minertransitionlog/minertransitionlog.proto
// DO NOT EDIT!

/*
Package minertransitionlog is a generated protocol buffer package.

It is generated from these files:
	golang.lakeparime.info/apis/minertransitionlog/minertransitionlog.proto

It has these top-level messages:
	PingResponse
	Command
	CommandList
*/
package minertransitionlog

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import common "golang.conradwood.net/apis/common"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// comment: message pingresponse
type PingResponse struct {
	// comment: field pingresponse.response
	Response string `protobuf:"bytes,1,opt,name=Response" json:"Response,omitempty"`
}

func (m *PingResponse) Reset()                    { *m = PingResponse{} }
func (m *PingResponse) String() string            { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()               {}
func (*PingResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PingResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type Command struct {
	ID       uint64 `protobuf:"varint,1,opt,name=ID" json:"ID,omitempty"`
	Name     string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	MinerID  uint64 `protobuf:"varint,3,opt,name=MinerID" json:"MinerID,omitempty"`
	MinerIP  string `protobuf:"bytes,4,opt,name=MinerIP" json:"MinerIP,omitempty"`
	Started  uint32 `protobuf:"varint,5,opt,name=Started" json:"Started,omitempty"`
	Executed uint32 `protobuf:"varint,6,opt,name=Executed" json:"Executed,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Command) GetID() uint64 {
	if m != nil {
		return m.ID
	}
	return 0
}

func (m *Command) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Command) GetMinerID() uint64 {
	if m != nil {
		return m.MinerID
	}
	return 0
}

func (m *Command) GetMinerIP() string {
	if m != nil {
		return m.MinerIP
	}
	return ""
}

func (m *Command) GetStarted() uint32 {
	if m != nil {
		return m.Started
	}
	return 0
}

func (m *Command) GetExecuted() uint32 {
	if m != nil {
		return m.Executed
	}
	return 0
}

type CommandList struct {
	Commands []*Command `protobuf:"bytes,1,rep,name=Commands" json:"Commands,omitempty"`
}

func (m *CommandList) Reset()                    { *m = CommandList{} }
func (m *CommandList) String() string            { return proto.CompactTextString(m) }
func (*CommandList) ProtoMessage()               {}
func (*CommandList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *CommandList) GetCommands() []*Command {
	if m != nil {
		return m.Commands
	}
	return nil
}

func init() {
	proto.RegisterType((*PingResponse)(nil), "minertransitionlog.PingResponse")
	proto.RegisterType((*Command)(nil), "minertransitionlog.Command")
	proto.RegisterType((*CommandList)(nil), "minertransitionlog.CommandList")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MinerTransitionLog service

type MinerTransitionLogClient interface {
	// example rpc
	LogCommand(ctx context.Context, in *Command, opts ...grpc.CallOption) (*common.Void, error)
	GetLast7Days(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*CommandList, error)
}

type minerTransitionLogClient struct {
	cc *grpc.ClientConn
}

func NewMinerTransitionLogClient(cc *grpc.ClientConn) MinerTransitionLogClient {
	return &minerTransitionLogClient{cc}
}

func (c *minerTransitionLogClient) LogCommand(ctx context.Context, in *Command, opts ...grpc.CallOption) (*common.Void, error) {
	out := new(common.Void)
	err := grpc.Invoke(ctx, "/minertransitionlog.MinerTransitionLog/LogCommand", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *minerTransitionLogClient) GetLast7Days(ctx context.Context, in *common.Void, opts ...grpc.CallOption) (*CommandList, error) {
	out := new(CommandList)
	err := grpc.Invoke(ctx, "/minertransitionlog.MinerTransitionLog/GetLast7Days", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MinerTransitionLog service

type MinerTransitionLogServer interface {
	// example rpc
	LogCommand(context.Context, *Command) (*common.Void, error)
	GetLast7Days(context.Context, *common.Void) (*CommandList, error)
}

func RegisterMinerTransitionLogServer(s *grpc.Server, srv MinerTransitionLogServer) {
	s.RegisterService(&_MinerTransitionLog_serviceDesc, srv)
}

func _MinerTransitionLog_LogCommand_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Command)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinerTransitionLogServer).LogCommand(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/minertransitionlog.MinerTransitionLog/LogCommand",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinerTransitionLogServer).LogCommand(ctx, req.(*Command))
	}
	return interceptor(ctx, in, info, handler)
}

func _MinerTransitionLog_GetLast7Days_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(common.Void)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MinerTransitionLogServer).GetLast7Days(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/minertransitionlog.MinerTransitionLog/GetLast7Days",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MinerTransitionLogServer).GetLast7Days(ctx, req.(*common.Void))
	}
	return interceptor(ctx, in, info, handler)
}

var _MinerTransitionLog_serviceDesc = grpc.ServiceDesc{
	ServiceName: "minertransitionlog.MinerTransitionLog",
	HandlerType: (*MinerTransitionLogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LogCommand",
			Handler:    _MinerTransitionLog_LogCommand_Handler,
		},
		{
			MethodName: "GetLast7Days",
			Handler:    _MinerTransitionLog_GetLast7Days_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "golang.lakeparime.info/apis/minertransitionlog/minertransitionlog.proto",
}

func init() {
	proto.RegisterFile("golang.lakeparime.info/apis/minertransitionlog/minertransitionlog.proto", fileDescriptor0)
}

var fileDescriptor0 = []byte{
	// 332 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x7c, 0x52, 0x31, 0x4f, 0xf3, 0x30,
	0x10, 0x55, 0xda, 0x7e, 0x6d, 0xbf, 0x6b, 0x61, 0xf0, 0x64, 0x85, 0x81, 0xaa, 0x03, 0x8a, 0x18,
	0x5c, 0xa9, 0x0c, 0x9d, 0x58, 0x20, 0x50, 0x55, 0x0a, 0xa8, 0x0a, 0x88, 0xdd, 0x24, 0x26, 0xb2,
	0xa8, 0x7d, 0x51, 0x6c, 0x04, 0xfc, 0x07, 0x76, 0xfe, 0x2e, 0x8a, 0xeb, 0x04, 0x10, 0x55, 0xa7,
	0xdc, 0xcb, 0x7b, 0xf7, 0xf4, 0xee, 0xce, 0xb0, 0x2c, 0x70, 0xc3, 0x75, 0xc1, 0x36, 0xfc, 0x59,
	0x94, 0xbc, 0x92, 0x4a, 0x30, 0xa9, 0x9f, 0x70, 0xc6, 0x4b, 0x69, 0x66, 0x4a, 0x6a, 0x51, 0xd9,
	0x8a, 0x6b, 0x23, 0xad, 0x44, 0xbd, 0xc1, 0x62, 0xc7, 0x2f, 0x56, 0x56, 0x68, 0x91, 0x90, 0xbf,
	0x4c, 0xc8, 0xbc, 0x79, 0x86, 0xba, 0xe2, 0xf9, 0x2b, 0x62, 0xce, 0xb4, 0xb0, 0x5b, 0xef, 0x0c,
	0x95, 0x42, 0xed, 0x3f, 0x5b, 0x8f, 0xe9, 0x29, 0x8c, 0xd7, 0x52, 0x17, 0xa9, 0x30, 0x25, 0x6a,
	0x23, 0x48, 0x08, 0xc3, 0xa6, 0xa6, 0xc1, 0x24, 0x88, 0xfe, 0xa7, 0x2d, 0x9e, 0x7e, 0x06, 0x30,
	0xb8, 0x44, 0xa5, 0xb8, 0xce, 0xc9, 0x21, 0x74, 0x56, 0xb1, 0x53, 0xf4, 0xd2, 0xce, 0x2a, 0x26,
	0x04, 0x7a, 0xb7, 0x5c, 0x09, 0xda, 0x71, 0x3d, 0xae, 0x26, 0x14, 0x06, 0x37, 0x75, 0xc2, 0x55,
	0x4c, 0xbb, 0x4e, 0xd8, 0xc0, 0x6f, 0x66, 0x4d, 0x7b, 0xae, 0xa1, 0x81, 0x35, 0x73, 0x67, 0x79,
	0x65, 0x45, 0x4e, 0xff, 0x4d, 0x82, 0xe8, 0x20, 0x6d, 0x60, 0x9d, 0xec, 0xea, 0x4d, 0x64, 0x2f,
	0x35, 0xd5, 0x77, 0x54, 0x8b, 0xa7, 0xd7, 0x30, 0xf2, 0xc1, 0x12, 0x69, 0x2c, 0x59, 0xc0, 0xd0,
	0x43, 0x43, 0x83, 0x49, 0x37, 0x1a, 0xcd, 0x8f, 0xd8, 0x8e, 0x2d, 0x7a, 0x4d, 0xda, 0x8a, 0xe7,
	0x1f, 0x01, 0x10, 0x97, 0xe4, 0xbe, 0x15, 0x26, 0x58, 0x90, 0x05, 0x40, 0x82, 0x45, 0x33, 0xfa,
	0x3e, 0xaf, 0x70, 0xcc, 0xfc, 0x7a, 0x1f, 0x50, 0xe6, 0xe4, 0x1c, 0xc6, 0x4b, 0x61, 0x13, 0x6e,
	0xec, 0x22, 0xe6, 0xef, 0x86, 0xfc, 0x62, 0xc3, 0xe3, 0x3d, 0x46, 0xf5, 0x1c, 0x17, 0x11, 0x9c,
	0x64, 0xa8, 0x7e, 0x3e, 0x94, 0xfa, 0x8e, 0x3b, 0xba, 0x1e, 0xfb, 0xee, 0x9a, 0x67, 0x5f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x88, 0x65, 0x57, 0x55, 0x5c, 0x02, 0x00, 0x00,
}
